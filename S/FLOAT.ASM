	 EVEN
exp_range:
	 dc.w	0
	 dc.w	16383
	 dc.l	1128436808
	 dc.l	419636504
	 dc.w	0
	 dc.w	16384
	 dc.l	587356241
	 dc.l	0
	 dc.w	-1
	 dc.w	16376
	 dc.l	1879414083
	 dc.l	362291208
	 EVEN
sincos_range:
	 dc.w	0
	 dc.w	16383
	 dc.l	830671240
	 dc.l	1636006151
	 dc.w	0
	 dc.w	16384
	 dc.l	826368021
	 dc.l	1649410048
	 dc.w	-32768
	 dc.w	16379
	 dc.l	-1995927294
	 dc.l	117440512
	 EVEN
tan_range:
	 dc.w	0
	 dc.w	16383
	 dc.l	1667635575
	 dc.l	593975316
	 dc.w	0
	 dc.w	16384
	 dc.l	359694343
	 dc.l	-2128281600
	 dc.w	-1
	 dc.w	16378
	 dc.l	1146373457
	 dc.l	50331648
	 EVEN
tanp_poly:
	 dc.w	4
	 dc.w	-1
	 dc.w	16379
	 dc.l	394663687
	 dc.l	874665026
	 dc.w	0
	 dc.w	16381
	 dc.l	874809464
	 dc.l	593006680
	 dc.w	-1
	 dc.w	16383
	 dc.l	322143056
	 dc.l	6562198
	 dc.w	0
	 dc.w	16384
	 dc.l	268435456
	 dc.l	0
	 EVEN
tanq_poly:
	 dc.w	5
	 dc.w	0
	 dc.w	16377
	 dc.l	1233228851
	 dc.l	-1724414383
	 dc.w	-1
	 dc.w	16380
	 dc.l	823661873
	 dc.l	-1871704062
	 dc.w	0
	 dc.w	16382
	 dc.l	627456050
	 dc.l	680804369
	 dc.w	-1
	 dc.w	16383
	 dc.l	1181161091
	 dc.l	865555753
	 dc.w	0
	 dc.w	16384
	 dc.l	268435456
	 dc.l	0
	 EVEN
exp_P:
	 dc.w	3
	 dc.w	0
	 dc.w	16379
	 dc.l	827675026
	 dc.l	1985381476
	 dc.w	0
	 dc.w	16381
	 dc.l	1970614656
	 dc.l	362029687
	 dc.w	0
	 dc.w	16383
	 dc.l	620756992
	 dc.l	0
	 EVEN
exp_Q:
	 dc.w	4
	 dc.w	0
	 dc.w	16377
	 dc.l	1963999272
	 dc.l	966291460
	 dc.w	0
	 dc.w	16380
	 dc.l	1662130324
	 dc.l	927176784
	 dc.w	0
	 dc.w	16382
	 dc.l	-390511986
	 dc.l	-19925614
	 dc.w	0
	 dc.w	16383
	 dc.l	1342177280
	 dc.l	0
	 EVEN
log2:
	 dc.w	0
	 dc.w	16383
	 dc.l	1764837144
	 dc.l	89756726
	 EVEN
log2b:
	 dc.w	0
	 dc.w	16369
	 dc.l	378032720
	 dc.l	33637207
	 EVEN
log10_f:
	 dc.w	0
	 dc.w	16384
	 dc.l	587356240
	 dc.l	-1835450298
	 EVEN
log10b_f:
	 dc.w	0
	 dc.w	16369
	 dc.l	827949568
	 dc.l	-2059062954
	 EVEN
loga_poly:
	 dc.w	3
	 dc.w	-1
	 dc.w	16383
	 dc.l	2018906408
	 dc.l	-2025254313
	 dc.w	0
	 dc.w	16385
	 dc.l	372783427
	 dc.l	1445994835
	 dc.w	-1
	 dc.w	16385
	 dc.l	1678920003
	 dc.l	1110918488
	 EVEN
logb_poly:
	 dc.w	4
	 dc.w	0
	 dc.w	16384
	 dc.l	268435456
	 dc.l	0
	 dc.w	-1
	 dc.w	16385
	 dc.l	895908215
	 dc.l	1938830436
	 dc.w	0
	 dc.w	16386
	 dc.l	824193570
	 dc.l	152642643
	 dc.w	-1
	 dc.w	16386
	 dc.l	1989450034
	 dc.l	277124231
	 EVEN
sincos_poly:
	 dc.w	8
	 dc.w	0
	 dc.w	16369
	 dc.l	656426896
	 dc.l	-1787262843
	 dc.w	-1
	 dc.w	16371
	 dc.l	1984074104
	 dc.l	109645895
	 dc.w	0
	 dc.w	16374
	 dc.l	369461558
	 dc.l	1224962393
	 dc.w	-1
	 dc.w	16376
	 dc.l	621093126
	 dc.l	2038592600
	 dc.w	0
	 dc.w	16378
	 dc.l	659911449
	 dc.l	553734774
	 dc.w	-1
	 dc.w	16380
	 dc.l	428085865
	 dc.l	-2079194748
	 dc.w	0
	 dc.w	16381
	 dc.l	-2093796557
	 dc.l	858992997
	 dc.w	-1
	 dc.w	16383
	 dc.l	375809638
	 dc.l	1717986919
	 EVEN
asnacsp_poly:
	 dc.w	5
	 dc.w	-1
	 dc.w	16383
	 dc.l	1768375667
	 dc.l	1148407908
	 dc.w	0
	 dc.w	16385
	 dc.l	269821218
	 dc.l	590874182
	 dc.w	-1
	 dc.w	16385
	 dc.l	963151970
	 dc.l	-1720384377
	 dc.w	0
	 dc.w	16385
	 dc.l	1461748263
	 dc.l	-2022141581
	 dc.w	-1
	 dc.w	16385
	 dc.l	657884308
	 dc.l	1380017189
	 EVEN
asnacsq_poly:
	 dc.w	6
	 dc.w	0
	 dc.w	16384
	 dc.l	268435456
	 dc.l	0
	 dc.w	-1
	 dc.w	16385
	 dc.l	595736665
	 dc.l	355889187
	 dc.w	0
	 dc.w	16386
	 dc.l	352932464
	 dc.l	-2079313824
	 dc.w	-1
	 dc.w	16386
	 dc.l	941122307
	 dc.l	907497492
	 dc.w	0
	 dc.w	16386
	 dc.l	1097942064
	 dc.l	612524097
	 dc.w	-1
	 dc.w	16386
	 dc.l	373428374
	 dc.l	1900320854
	 EVEN
	 xdef	FloatExp
FloatExp:
	link.w a6,#-56
	 movem.l #$1f3c,-(sp)
	move.w #12,-(sp)
	pea -28(a6)
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	lea exp_range,a4
	lea FloatReg1,a5
	 jsr FloatRangeReducByMod
	move.l d0,-32(a6)
	move.w #12,-(sp)
	moveq.l #-44,d0
	add.l a6,d0
	move.l d0,-(sp)
	move.l a5,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.l -44(a6),-16(a6)
	move.l -40(a6),-12(a6)
	move.l -36(a6),-8(a6)
	move.l -32(a6),-4(a6)
	cmp.w #16363,-14(a6)
	 bls LFlt3
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #-16,d0
	add.l a6,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #-16,d0
	add.l a6,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #-44,d0
	add.l a6,d0
	move.l d0,-(sp)
	move.l a5,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #-44,d0
	add.l a6,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	lea exp_P,a4
	 jsr FloatPolyEval
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #-16,d0
	add.l a6,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #-56,d0
	add.l a6,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #-56,d0
	add.l a6,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #-44,d0
	add.l a6,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	lea exp_Q,a4
	 jsr FloatPolyEval
	lea FloatReg2,a4
	move.w #12,-(sp)
	move.l a4,-(sp)
	moveq.l #-56,d0
	add.l a6,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatSub
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatDivide
	move.w #12,-(sp)
	move.l a4,-(sp)
	pea FloatHalf
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatAdd
	 bra LFlt8
	 EVEN
LFlt3:
	move.w #12,-(sp)
	pea FloatReg1
	moveq.l #-16,d0
	add.l a6,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg2
	pea FloatOne
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatAdd
LFlt8:
	move.w -2(a6),d0
	add.w d0,FloatReg1+2
	 movem.l -92(a6),#$3cf8
	unlk a6
	rts
	 EVEN
	 xdef	_sincos
_sincos:
	lea -36(sp),sp
	 movem.l #$1f3e,-(sp)
	lea sincos_range,a4
	lea FloatReg1,a5
	 jsr FloatRangeReducByMod
	move.l d0,52(sp)
	lea 40(sp),a2
	move.w #12,-(sp)
	move.l a2,-(sp)
	move.l a5,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.l (a2),56(sp)
	move.l 44(sp),60(sp)
	move.l 48(sp),64(sp)
	move.l 52(sp),68(sp)
	lea 56(sp),a6
	moveq.l #1,d0
	and.l 68(sp),d0
	tst.w d0
	 beq LFlt10
	not.w 80(sp)
LFlt10:
	cmp.w #16373,58(sp)
	 bls LFlt11
	move.w #12,-(sp)
	pea FloatReg3
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	lea sincos_poly,a4
	 jsr FloatPolyEval
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	pea FloatReg2
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatAdd
LFlt12:
	tst.w 80(sp)
	 beq LFlt9
	not.w FloatReg1
	 bra LFlt9
	 EVEN
LFlt11:
	move.w #12,-(sp)
	pea FloatReg1
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 bra LFlt12
	 EVEN
LFlt9:
	 movem.l (sp)+,#$7cf8
	lea 36(sp),sp
	rts
	 EVEN
	 xdef	FloatSin
FloatSin:
	cmp.w #8192,FloatReg1+2
	 beq LFlt14
	lea FloatReg1,a0
	move.w (a0),d0
	clr.w (a0)
	move.w d0,-(sp)
	 jsr _sincos
	addq.l #2,sp
LFlt14:
	rts
	nop
	 EVEN
	 xdef	FloatCos
FloatCos:
	cmp.w #8192,FloatReg1+2
	 beq LFlt17
	clr.w FloatReg1
	move.w #12,-(sp)
	pea FloatReg2
	pea FloatPiDiv2
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatAdd
	clr.w -(sp)
	 jsr _sincos
	addq.l #2,sp
	rts
	 EVEN
LFlt17:
	move.w #12,-(sp)
	pea FloatReg1
	pea FloatOne
	 jsr bcopy
	lea 10(sp),sp
	rts
	nop
	 EVEN
	 xdef	FloatTan
FloatTan:
	lea -60(sp),sp
	 movem.l #$1f3e,-(sp)
	cmp.w #8192,FloatReg1+2
	 beq LFlt19
	lea tan_range,a4
	lea FloatReg1,a5
	 jsr FloatRangeReducByMod
	move.l d0,76(sp)
	move.w #12,-(sp)
	moveq.l #66,d0
	add.l sp,d0
	move.l d0,-(sp)
	move.l a5,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.l 64(sp),80(sp)
	move.l 68(sp),84(sp)
	move.l 72(sp),88(sp)
	move.l 76(sp),92(sp)
	lea 80(sp),a6
	cmp.w #16373,82(sp)
	 bhi LFlt25
	moveq.l #1,d0
	and.l 92(sp),d0
	tst.w d0
	 beq LFlt19
	move.w #12,-(sp)
	pea FloatReg4
	pea FloatMinusOne
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatDivide
	 bra LFlt19
	 EVEN
LFlt25:
	move.w #12,-(sp)
	pea FloatReg3
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #66,d0
	add.l sp,d0
	move.l d0,-(sp)
	move.l a5,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #70,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	lea tanp_poly,a4
	 jsr FloatPolyEval
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatMult
	lea 52(sp),a6
	move.w #12,-(sp)
	move.l a6,-(sp)
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #70,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	lea tanq_poly,a4
	 jsr FloatPolyEval
	lea 40(sp),a2
	move.w #12,-(sp)
	move.l a2,-(sp)
	pea FloatReg1
	 jsr bcopy
	lea 10(sp),sp
	moveq.l #1,d0
	and.l 92(sp),d0
	tst.w d0
	 beq LFlt22
	not.w 40(sp)
LFlt22:
	move.w #12,-(sp)
	pea FloatReg4
	move.l a6,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	move.l a2,-(sp)
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatDivide
	 EVEN
LFlt19:
	 movem.l (sp)+,#$7cf8
	lea 60(sp),sp
	rts
	 EVEN
	 xdef	_asnacs
_asnacs:
	lea -32(sp),sp
	 movem.l #$1f3e,-(sp)
	move.w 76(sp),d4
	lea FloatReg1,a2
	move.w (a2),d3
	clr.w (a2)
	move.w #12,-(sp)
	pea FloatReg2
	pea FloatHalf
	lea bcopy,a3
	 jsr (a3)
	lea 10(sp),sp
	 jsr FloatUCmp
	tst.b d0
	 blt LFlt27
	cmp.w #16383,FloatReg1+2
	 bhi LFlt29
	tst.w d3
	seq d0
	ext.w d0
	move.w d0,42(sp)
	add.w #13,42(sp)
	tst.w d4
	 beq LFlt31
	move.w #14,42(sp)
	tst.w d3
	 bne LFlt31
	clr.w 42(sp)
LFlt31:
	move.w #12,-(sp)
	pea FloatReg1
	pea FloatOne
	lea bcopy,a6
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg2
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatSub
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	pea FloatHalf
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #46,d0
	add.l sp,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg1
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatSqrt
	 jsr FloatMult2
	move.w #12,-(sp)
	moveq.l #58,d0
	add.l sp,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr (a6)
LFlt48:
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	lea bcopy,a6
	 jsr (a6)
	lea 10(sp),sp
	lea asnacsq_poly,a4
	 jsr FloatPolyEval
	move.w #12,-(sp)
	pea FloatReg4
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	lea asnacsp_poly,a4
	 jsr FloatPolyEval
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatDivide
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #62,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	pea FloatReg2
	moveq.l #62,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatAdd
LFlt42:
	move.w 42(sp),d0
	and.w #8,d0
	 beq LFlt43
	not.w FloatReg1
LFlt43:
	move.w 42(sp),d0
	and.w #4,d0
	 beq LFlt44
	move.w 42(sp),d0
	and.w #2,d0
	 beq LFlt45
	move.w #12,-(sp)
	pea FloatReg2
	pea FloatPi
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatAdd
LFlt44:
	and.w #1,42(sp)
	 beq LFlt26
	not.w FloatReg1
	 bra LFlt26
	 EVEN
LFlt45:
	move.w #12,-(sp)
	pea FloatReg2
	pea FloatPiDiv2
	 jsr bcopy
	lea 10(sp),sp
	 jsr FloatAdd
	 bra LFlt44
	 EVEN
LFlt29:
	move.w #12,-(sp)
	move.l a2,-(sp)
	pea FloatNAN
	 jsr (a3)
	lea 10(sp),sp
	 bra LFlt26
	 EVEN
LFlt27:
	tst.w d3
	sne d0
	ext.w d0
	move.w d0,42(sp)
	neg.w 42(sp)
	tst.w d4
	 beq LFlt38
	move.w #4,42(sp)
	tst.w d3
	 bne LFlt38
	move.w #12,42(sp)
LFlt38:
	cmp.w #16373,58(sp)
	 bls LFlt42
	lea FloatReg1,a5
	move.w #12,-(sp)
	moveq.l #58,d0
	add.l sp,d0
	move.l d0,-(sp)
	move.l a5,-(sp)
	lea bcopy,a4
	 jsr (a4)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	move.l a5,-(sp)
	 jsr (a4)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	move.l a5,-(sp)
	 jsr (a4)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #46,d0
	add.l sp,d0
	move.l d0,-(sp)
	move.l a5,-(sp)
	 jsr (a4)
	 bra LFlt48
	 EVEN
LFlt26:
	 movem.l (sp)+,#$7cf8
	lea 32(sp),sp
	rts
	 EVEN
	 xdef	FloatAsin
FloatAsin:
	cmp.w #8192,FloatReg1+2
	 beq LFlt49
	clr.w -(sp)
	 jsr _asnacs
	addq.l #2,sp
LFlt49:
	rts
	nop
	 EVEN
	 xdef	FloatAcos
FloatAcos:
	move.w #1,-(sp)
	 jsr _asnacs
	addq.l #2,sp
	rts
	 EVEN
	 xdef	FloatPow
FloatPow:
	lea -44(sp),sp
	 movem.l #$1f3e,-(sp)
	clr.w 42(sp)
	move.w FloatReg1+2,d2
	move.w FloatReg2+2,d1
	move.w d2,d0
	or.w d1,d0
	cmp.w #32767,d0
	 beq LFlt53
	cmp.w #8192,d1
	 beq LFlt97
	cmp.w #8192,d2
	 beq LFlt53
	move.l #FloatReg1,d6
	move.w #12,-(sp)
	moveq.l #70,d0
	add.l sp,d0
	move.l d0,-(sp)
	move.l d6,-(sp)
	lea bcopy,a2
	 jsr (a2)
	lea 10(sp),sp
	lea 56(sp),a5
	move.l #FloatReg2,d7
	move.w #12,-(sp)
	move.l a5,-(sp)
	move.l d7,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	move.w #12,-(sp)
	move.l d6,-(sp)
	move.l a5,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	 jsr FloatCeil
	move.w #12,-(sp)
	move.l d7,-(sp)
	move.l a5,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	lea FloatCmp,a3
	 jsr (a3)
	tst.b d0
	 bne LFlt59
	move.w #12,-(sp)
	move.l d6,-(sp)
	move.l a5,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	 jsr Float2Int
	move.l d0,a4
	move.w #12,-(sp)
	move.l d6,-(sp)
	moveq.l #74,d1
	add.l sp,d1
	move.l d1,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	move.w #12,-(sp)
	move.l d7,-(sp)
	pea FloatOne
	 jsr (a2)
	lea 10(sp),sp
	 jsr (a3)
	tst.b d0
	 beq LFlt61
	moveq.l #1,d0
	cmp.l a4,d0
	 beq LFlt61
	move.w #12,-(sp)
	move.l d6,-(sp)
	moveq.l #74,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	move.w #12,-(sp)
	move.l d7,-(sp)
	pea FloatMinusOne
	 jsr (a2)
	lea 10(sp),sp
	 jsr (a3)
	tst.b d0
	 bne LFlt62
	move.l a4,d1
	btst #0,d1
	 beq LFlt98
LFlt62:
	moveq.l #2,d1
	cmp.l a4,d1
	 beq LFlt99
	tst.w 68(sp)
	 beq LFlt64
	move.l a4,d0
	moveq.l #1,d1
	and.l d1,d0
	tst.w d0
	sne d0
	ext.w d0
	move.w d0,42(sp)
	clr.w 68(sp)
LFlt64:
	move.l a4,d0
	add.l #65535,d0
	cmp.l #131070,d0
	 bhi LFlt59
	move.l #65536,a5
	cmp.w #0,a4
	 ble LFlt68
	move.l a4,d0
	btst #16,d0
	 bne LFlt89
LFlt72:
	move.l a5,d1
	lsr.l #1,d1
	move.l d1,a5
	move.l a4,d0
	and.l d1,d0
	 beq LFlt72
LFlt89:
	move.w #12,-(sp)
	moveq.l #46,d0
	add.l sp,d0
	move.l d0,-(sp)
	moveq.l #74,d1
	add.l sp,d1
	move.l d1,-(sp)
	lea bcopy,a2
	 jsr (a2)
	lea 10(sp),sp
	move.l a5,d0
	lsr.l #1,d0
	move.l d0,a5
	 beq LFlt78
	move.l a2,a6
LFlt77:
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #50,d1
	add.l sp,d1
	move.l d1,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #46,d1
	add.l sp,d1
	move.l d1,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.l a4,d0
	move.l a5,d1
	and.l d1,d0
	 bne LFlt100
LFlt76:
	move.l a5,d1
	lsr.l #1,d1
	move.l d1,a5
	 bne LFlt77
LFlt78:
	move.w 42(sp),d0
	eor.w d0,44(sp)
	move.w #12,-(sp)
	pea FloatReg1
	moveq.l #50,d1
	add.l sp,d1
	move.l d1,-(sp)
	 EVEN
LFlt95:
	 jsr bcopy
LFlt94:
	lea 10(sp),sp
	 bra LFlt53
	 EVEN
LFlt100:
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #74,d1
	add.l sp,d1
	move.l d1,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #46,d0
	add.l sp,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	 bra LFlt76
	 EVEN
LFlt68:
	move.l a4,d0
	neg.l d0
	move.l d0,a6
	btst #16,d0
	 bne LFlt92
LFlt82:
	move.l a5,d1
	lsr.l #1,d1
	move.l d1,a5
	move.l a6,d0
	and.l d1,d0
	 beq LFlt82
LFlt92:
	move.w #12,-(sp)
	pea FloatReg4
	pea FloatOne
	lea bcopy,a4
	 jsr (a4)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #74,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a4)
	lea 10(sp),sp
	 jsr FloatDivide
	move.l #FloatReg1,d3
	move.w #12,-(sp)
	moveq.l #46,d1
	add.l sp,d1
	move.l d1,-(sp)
	move.l d3,-(sp)
	 jsr (a4)
	lea 10(sp),sp
	move.l a5,d0
	lsr.l #1,d0
	move.l d0,a5
	 beq LFlt78
LFlt87:
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #50,d1
	add.l sp,d1
	move.l d1,-(sp)
	 jsr (a4)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a4)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #46,d1
	add.l sp,d1
	move.l d1,-(sp)
	pea FloatReg1
	 jsr (a4)
	lea 10(sp),sp
	move.l a6,d0
	move.l a5,d1
	and.l d1,d0
	 bne LFlt101
LFlt86:
	move.l a5,d1
	lsr.l #1,d1
	move.l d1,a5
	 bne LFlt87
	 bra LFlt78
	 EVEN
LFlt101:
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a4)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #74,d1
	add.l sp,d1
	move.l d1,-(sp)
	 jsr (a4)
	lea 10(sp),sp
	 jsr FloatDivide
	move.w #12,-(sp)
	moveq.l #46,d0
	add.l sp,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr (a4)
	lea 10(sp),sp
	 bra LFlt86
	 EVEN
LFlt59:
	move.l #FloatReg1,d3
	move.w #12,-(sp)
	move.l d3,-(sp)
	moveq.l #74,d0
	add.l sp,d0
	move.l d0,-(sp)
	lea bcopy,a2
	 jsr (a2)
	lea 10(sp),sp
	 jsr FloatLn
	move.w #12,-(sp)
	pea FloatReg3
	move.l d3,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	move.l a5,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	 jsr FloatMult
	 jsr FloatExp
	 bra LFlt53
	 EVEN
LFlt99:
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #74,d0
	add.l sp,d0
	move.l d0,-(sp)
	lea bcopy,a2
	 jsr (a2)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #74,d1
	add.l sp,d1
	move.l d1,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	 jsr FloatMult
	 bra LFlt53
	 EVEN
LFlt98:
	not.w 68(sp)
	move.w #12,-(sp)
	move.l d6,-(sp)
	moveq.l #74,d0
	add.l sp,d0
	move.l d0,-(sp)
	 EVEN
LFlt96:
	 jsr (a2)
	 bra LFlt94
	 EVEN
LFlt61:
	move.w #12,-(sp)
	move.l d6,-(sp)
	moveq.l #74,d1
	add.l sp,d1
	move.l d1,-(sp)
	 bra LFlt96
	 EVEN
LFlt97:
	move.w #12,-(sp)
	pea FloatReg1
	pea FloatOne
	 bra LFlt95
	 EVEN
LFlt53:
	 movem.l (sp)+,#$7cf8
	lea 44(sp),sp
	rts
	 EVEN
	 xdef	FloatLn
FloatLn:
	lea -92(sp),sp
	 movem.l #$1f3e,-(sp)
	lea FloatReg1+2,a0
	move.w (a0),d0
	add.w #-16383,d0
	move.w d0,42(sp)
	move.w #16383,(a0)
	lea 80(sp),a2
	lea FloatReg1,a6
	move.w #12,-(sp)
	move.l a2,-(sp)
	move.l a6,-(sp)
	lea bcopy,a5
	 jsr (a5)
	lea 10(sp),sp
	move.w #12,-(sp)
	move.l a6,-(sp)
	move.l a2,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg2
	pea FloatSqrtHalf
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatCmp
	tst.b d0
	 ble LFlt103
	move.w #12,-(sp)
	move.l a6,-(sp)
	pea FloatMinusOne
	 jsr (a5)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg2
	move.l a2,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatAdd
	move.w #12,-(sp)
	pea FloatReg4
	move.l a6,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	move.l a2,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	lea FloatHalf,a4
	move.w #12,-(sp)
	pea FloatReg4
	move.l a4,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	pea FloatReg2
	move.l a4,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatAdd
	move.w #12,-(sp)
	pea FloatReg3
	move.l a6,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatDivide
LFlt106:
	move.w #12,-(sp)
	moveq.l #118,d0
	add.l sp,d0
	move.l d0,-(sp)
	move.l a6,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #122,d0
	add.l sp,d0
	move.l d0,-(sp)
	lea bcopy,a6
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #122,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	moveq.l #106,d0
	add.l sp,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #110,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	lea loga_poly,a4
	 jsr FloatPolyEval
	move.w #12,-(sp)
	pea FloatReg4
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #110,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	lea logb_poly,a4
	 jsr FloatPolyEval
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatDivide
	move.w #12,-(sp)
	pea FloatReg3
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #122,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	pea FloatReg2
	moveq.l #122,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatAdd
	move.w #12,-(sp)
	moveq.l #94,d0
	add.l sp,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	tst.w 42(sp)
	 beq LFlt105
	move.w 42(sp),-(sp)
	 jsr Int2Float
	addq.l #2,sp
	lea 68(sp),a5
	move.w #12,-(sp)
	move.l a5,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	move.l a5,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	pea log10_f
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatMult
	lea 56(sp),a4
	move.w #12,-(sp)
	move.l a4,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg1
	move.l a4,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg2
	moveq.l #98,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatAdd
	move.w #12,-(sp)
	moveq.l #46,d0
	add.l sp,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	move.l a5,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	pea log10b_f
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	pea FloatReg1
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg2
	move.l a4,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	lea FloatSub,a2
	 jsr (a2)
	move.w #12,-(sp)
	pea FloatReg2
	moveq.l #98,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr (a2)
	move.w #12,-(sp)
	pea FloatReg2
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatAdd
	move.w #12,-(sp)
	pea FloatReg2
	moveq.l #50,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 jsr FloatAdd
	move.w #12,-(sp)
	moveq.l #94,d0
	add.l sp,d0
	move.l d0,-(sp)
	pea FloatReg1
	 jsr (a6)
	lea 10(sp),sp
	 bra LFlt105
	 EVEN
LFlt103:
	subq.w #1,42(sp)
	move.w #12,-(sp)
	move.l a6,-(sp)
	pea FloatMinusHalf
	 jsr (a5)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg2
	move.l a2,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatAdd
	move.w #12,-(sp)
	moveq.l #106,d0
	add.l sp,d0
	move.l d0,-(sp)
	move.l a6,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg4
	moveq.l #110,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	move.w #12,-(sp)
	pea FloatReg3
	moveq.l #110,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	lea FloatHalf,a4
	move.w #12,-(sp)
	pea FloatReg4
	move.l a4,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatMult
	move.w #12,-(sp)
	pea FloatReg2
	move.l a4,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatAdd
	move.w #12,-(sp)
	pea FloatReg3
	move.l a6,-(sp)
	 jsr (a5)
	lea 10(sp),sp
	 jsr FloatDivide
	 bra LFlt106
	 EVEN
LFlt105:
	move.w #12,-(sp)
	pea FloatReg1
	moveq.l #98,d0
	add.l sp,d0
	move.l d0,-(sp)
	 jsr (a6)
	lea 10(sp),sp
	 movem.l (sp)+,#$7cf8
	lea 92(sp),sp
	rts
