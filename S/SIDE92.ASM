TextFont46:
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	0
	 dc.b	2
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	7
	 dc.b	2
	 dc.b	7
	 dc.b	2
	 dc.b	0
	 dc.b	3
	 dc.b	6
	 dc.b	7
	 dc.b	3
	 dc.b	6
	 dc.b	0
	 dc.b	5
	 dc.b	1
	 dc.b	2
	 dc.b	4
	 dc.b	5
	 dc.b	0
	 dc.b	2
	 dc.b	5
	 dc.b	2
	 dc.b	5
	 dc.b	3
	 dc.b	0
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	1
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	1
	 dc.b	0
	 dc.b	2
	 dc.b	1
	 dc.b	1
	 dc.b	1
	 dc.b	2
	 dc.b	0
	 dc.b	0
	 dc.b	5
	 dc.b	2
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	7
	 dc.b	2
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	2
	 dc.b	4
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	7
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	0
	 dc.b	1
	 dc.b	1
	 dc.b	2
	 dc.b	4
	 dc.b	4
	 dc.b	0
	 dc.b	3
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	6
	 dc.b	0
	 dc.b	2
	 dc.b	6
	 dc.b	2
	 dc.b	2
	 dc.b	7
	 dc.b	0
	 dc.b	7
	 dc.b	1
	 dc.b	3
	 dc.b	4
	 dc.b	7
	 dc.b	0
	 dc.b	7
	 dc.b	1
	 dc.b	2
	 dc.b	1
	 dc.b	6
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	7
	 dc.b	1
	 dc.b	1
	 dc.b	0
	 dc.b	7
	 dc.b	4
	 dc.b	7
	 dc.b	1
	 dc.b	6
	 dc.b	0
	 dc.b	3
	 dc.b	4
	 dc.b	6
	 dc.b	5
	 dc.b	3
	 dc.b	0
	 dc.b	7
	 dc.b	1
	 dc.b	2
	 dc.b	4
	 dc.b	4
	 dc.b	0
	 dc.b	3
	 dc.b	5
	 dc.b	2
	 dc.b	5
	 dc.b	6
	 dc.b	0
	 dc.b	6
	 dc.b	5
	 dc.b	3
	 dc.b	1
	 dc.b	6
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	0
	 dc.b	2
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	0
	 dc.b	2
	 dc.b	4
	 dc.b	0
	 dc.b	1
	 dc.b	2
	 dc.b	4
	 dc.b	2
	 dc.b	1
	 dc.b	0
	 dc.b	0
	 dc.b	7
	 dc.b	0
	 dc.b	7
	 dc.b	0
	 dc.b	0
	 dc.b	4
	 dc.b	2
	 dc.b	1
	 dc.b	2
	 dc.b	4
	 dc.b	0
	 dc.b	6
	 dc.b	1
	 dc.b	2
	 dc.b	0
	 dc.b	2
	 dc.b	0
	 dc.b	6
	 dc.b	1
	 dc.b	5
	 dc.b	5
	 dc.b	2
	 dc.b	0
	 dc.b	2
	 dc.b	5
	 dc.b	7
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	6
	 dc.b	5
	 dc.b	6
	 dc.b	5
	 dc.b	6
	 dc.b	0
	 dc.b	3
	 dc.b	4
	 dc.b	4
	 dc.b	4
	 dc.b	3
	 dc.b	0
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	6
	 dc.b	0
	 dc.b	7
	 dc.b	4
	 dc.b	6
	 dc.b	4
	 dc.b	7
	 dc.b	0
	 dc.b	7
	 dc.b	4
	 dc.b	6
	 dc.b	4
	 dc.b	4
	 dc.b	0
	 dc.b	3
	 dc.b	4
	 dc.b	5
	 dc.b	5
	 dc.b	3
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	7
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	7
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	7
	 dc.b	0
	 dc.b	1
	 dc.b	1
	 dc.b	1
	 dc.b	5
	 dc.b	3
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	4
	 dc.b	4
	 dc.b	4
	 dc.b	4
	 dc.b	7
	 dc.b	0
	 dc.b	5
	 dc.b	7
	 dc.b	7
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	2
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	2
	 dc.b	0
	 dc.b	6
	 dc.b	5
	 dc.b	6
	 dc.b	4
	 dc.b	4
	 dc.b	0
	 dc.b	2
	 dc.b	5
	 dc.b	5
	 dc.b	6
	 dc.b	3
	 dc.b	0
	 dc.b	6
	 dc.b	5
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	3
	 dc.b	4
	 dc.b	2
	 dc.b	1
	 dc.b	6
	 dc.b	0
	 dc.b	7
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	7
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	2
	 dc.b	2
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	7
	 dc.b	7
	 dc.b	5
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	2
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	0
	 dc.b	7
	 dc.b	1
	 dc.b	2
	 dc.b	4
	 dc.b	7
	 dc.b	0
	 dc.b	3
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	3
	 dc.b	0
	 dc.b	4
	 dc.b	4
	 dc.b	2
	 dc.b	1
	 dc.b	1
	 dc.b	0
	 dc.b	6
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	6
	 dc.b	0
	 dc.b	2
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	7
	 dc.b	0
	 dc.b	2
	 dc.b	1
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	3
	 dc.b	5
	 dc.b	5
	 dc.b	3
	 dc.b	0
	 dc.b	4
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	6
	 dc.b	0
	 dc.b	0
	 dc.b	3
	 dc.b	4
	 dc.b	4
	 dc.b	3
	 dc.b	0
	 dc.b	1
	 dc.b	3
	 dc.b	5
	 dc.b	5
	 dc.b	3
	 dc.b	0
	 dc.b	0
	 dc.b	3
	 dc.b	5
	 dc.b	6
	 dc.b	3
	 dc.b	0
	 dc.b	3
	 dc.b	4
	 dc.b	6
	 dc.b	4
	 dc.b	4
	 dc.b	0
	 dc.b	0
	 dc.b	3
	 dc.b	5
	 dc.b	3
	 dc.b	1
	 dc.b	6
	 dc.b	4
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	2
	 dc.b	0
	 dc.b	6
	 dc.b	2
	 dc.b	7
	 dc.b	0
	 dc.b	0
	 dc.b	1
	 dc.b	0
	 dc.b	1
	 dc.b	5
	 dc.b	2
	 dc.b	4
	 dc.b	5
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	1
	 dc.b	0
	 dc.b	0
	 dc.b	5
	 dc.b	7
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	5
	 dc.b	5
	 dc.b	2
	 dc.b	0
	 dc.b	0
	 dc.b	6
	 dc.b	5
	 dc.b	5
	 dc.b	6
	 dc.b	4
	 dc.b	0
	 dc.b	3
	 dc.b	5
	 dc.b	5
	 dc.b	3
	 dc.b	1
	 dc.b	0
	 dc.b	3
	 dc.b	4
	 dc.b	4
	 dc.b	4
	 dc.b	0
	 dc.b	0
	 dc.b	3
	 dc.b	6
	 dc.b	1
	 dc.b	6
	 dc.b	0
	 dc.b	2
	 dc.b	7
	 dc.b	2
	 dc.b	2
	 dc.b	1
	 dc.b	0
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	3
	 dc.b	0
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	5
	 dc.b	2
	 dc.b	0
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	7
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	5
	 dc.b	2
	 dc.b	2
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	5
	 dc.b	5
	 dc.b	3
	 dc.b	1
	 dc.b	6
	 dc.b	0
	 dc.b	7
	 dc.b	1
	 dc.b	2
	 dc.b	7
	 dc.b	0
	 dc.b	3
	 dc.b	2
	 dc.b	4
	 dc.b	2
	 dc.b	3
	 dc.b	0
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	2
	 dc.b	0
	 dc.b	6
	 dc.b	2
	 dc.b	1
	 dc.b	2
	 dc.b	6
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	7
	 dc.b	7
	 dc.b	7
	 dc.b	7
	 dc.b	7
	 dc.b	0
	 dc.b	0
	 dc.b	2
	 dc.b	5
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	7
	 dc.b	7
	 dc.b	7
	 dc.b	7
	 dc.b	7
	 dc.b	0
	
LSideC0:
	 dc.b "as(",$22,"!",$22,",",$22,"!_p",$22,")",0
LSideC1:
	 dc.b "!_p()",0
LSideC2:
	 dc.b "as_error",0
LSideC3:
	 dc.b "",0
	 EVEN
	 xdef	init_side
init_side:
	move.l a2,-(sp)
	move.l d3,-(sp)
	move.w #14,-(sp)
	pea exec_name
	pea LSideC0
	lea bcopy,a2
	 jsr (a2)
	lea 10(sp),sp
	move.w #6,-(sp)
	pea exec_name2
	pea LSideC1
	 jsr (a2)
	lea 10(sp),sp
	move.w #9,-(sp)
	pea text2_name
	pea LSideC2
	 jsr (a2)
	lea 10(sp),sp
	move.l #LSideC3,d3
	move.w #1,-(sp)
	pea replace_str
	move.l d3,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	move.w #1,-(sp)
	pea find_str
	move.l d3,-(sp)
	 jsr (a2)
	lea 10(sp),sp
	move.w #336,key_delay
	move.w #48,key_rate
	clr.w disp_indic
	clr.w clipboard
	move.b #1,auto_code
	move.b #1,auto_indent
	clr.w text2_pos
	move.l (sp)+,d3
	move.l (sp)+,a2
	rts
	 EVEN
draw_hline:
	move.l d3,-(sp)
	move.w 8(sp),d2
	move.w 10(sp),a1
	move.w 12(sp),d0
	move.w d0,d1
	lsl.w #5,d1
	move.w d1,a0
	lsl.w #1,d0
	sub.w d0,a0
	move.w d2,d0
	asr.w #3,d0
	lea 0(a0,d0.w),a0
	lea 19456(a0),a0
	move.w d2,d1
	and.w #7,d1
	move.w #128,d0
	asr.w d1,d0
	move.w d0,d1
	move.w d2,d0
	addq.w #1,d2
	cmp.w a1,d0
	 bgt LSide10
	move.w 14(sp),d3
	and.w #1,d3
	 EVEN
LSide8:
	tst.w d3
	 beq LSide6
	or.b d1,(a0)
LSide7:

	ror.b #1,d1
 bcc.s SideNextHline
 addq.l #1,a0
SideNextHline:

	move.w d2,d0
	addq.w #1,d2
	cmp.w a1,d0
	 ble LSide8
	 bra LSide10
	 EVEN
LSide6:
	move.b d1,d0
	not.b d0
	and.b d0,(a0)
	 bra LSide7
	 EVEN
LSide10:
	move.l (sp)+,d3
	rts
	 EVEN
draw_vline:
	 movem.l #$1c00,-(sp)
	move.w 16(sp),d1
	move.w 18(sp),d2
	move.w 20(sp),a1
	move.w 22(sp),d4
	move.w d2,d0
	lsl.w #5,d0
	move.w d0,a0
	move.w d2,d0
	lsl.w #1,d0
	sub.w d0,a0
	move.w d1,d0
	asr.w #3,d0
	lea 0(a0,d0.w),a0
	lea 19456(a0),a0
	and.w #7,d1
	move.w #128,d0
	asr.w d1,d0
	move.w d0,d1
	move.w d2,d0
	addq.w #1,d2
	cmp.w a1,d0
	 bgt LSide21
	move.b d4,d3
	and.b #-128,d3
	and.w #1,d4
	move.b d1,d5
	not.b d5
	 EVEN
LSide19:
	tst.b d3
	 beq LSide15
	eor.b d1,(a0)
LSide16:
	lea 30(a0),a0
	move.w d2,d0
	addq.w #1,d2
	cmp.w a1,d0
	 ble LSide19
	 bra LSide21
	 EVEN
LSide15:
	tst.w d4
	 beq LSide17
	or.b d1,(a0)
	 bra LSide16
	 EVEN
LSide17:
	and.b d5,(a0)
	 bra LSide16
	 EVEN
LSide21:
	 movem.l (sp)+,#$38
	rts
	 EVEN
window:
	 movem.l #$1f3c,-(sp)
	move.w 40(sp),d2
	move.w 42(sp),d3
	move.w #240,d1
	sub.w d2,d1
	move.w d1,d0
	moveq.l #15,d4
	lsr.w d4,d0
	move.w d1,d4
	add.w d0,d4
	asr.w #1,d4
	move.w d4,d7
	add.w d2,d7
	move.w #128,d1
	sub.w d3,d1
	move.w d1,d0
	moveq.l #15,d2
	lsr.w d2,d0
	move.w d1,d5
	add.w d0,d5
	asr.w #1,d5
	move.w d5,d6
	add.w d3,d6
	move.w d5,d0
	addq.w #2,d0
	move.w d0,penRow
	move.w d4,d2
	addq.w #2,d2
	move.w d2,penCol
	move.w #1,-(sp)
	move.w d5,-(sp)
	move.w d7,-(sp)
	move.w d4,-(sp)
	lea draw_hline,a2
	 jsr (a2)
	move.w #1,-(sp)
	move.w d6,-(sp)
	move.w d7,-(sp)
	move.w d4,-(sp)
	 jsr (a2)
	move.w #1,-(sp)
	move.w d6,a4
	addq.w #1,a4
	move.w a4,-(sp)
	move.w d7,a5
	addq.w #1,a5
	move.w a5,-(sp)
	move.w d4,d0
	addq.w #1,d0
	move.w d0,-(sp)
	 jsr (a2)
	move.w d5,a3
	addq.w #1,a3
	move.w a3,d3
	lea 24(sp),sp
	cmp.w a3,d6
	 ble LSide29
	 EVEN
LSide27:
	clr.w -(sp)
	move.w d3,-(sp)
	move.w d7,-(sp)
	move.w d4,-(sp)
	 jsr draw_hline
	addq.l #8,sp
	addq.w #1,d3
	cmp.w d3,d6
	 bgt LSide27
LSide29:
	move.w #1,-(sp)
	move.w d6,-(sp)
	move.w d5,-(sp)
	move.w d4,-(sp)
	lea draw_vline,a2
	 jsr (a2)
	move.w #1,-(sp)
	move.w d6,-(sp)
	move.w d5,-(sp)
	move.w d7,-(sp)
	 jsr (a2)
	move.w #1,-(sp)
	move.w a4,-(sp)
	move.w a3,-(sp)
	move.w a5,-(sp)
	 jsr (a2)
	lea 24(sp),sp
	 movem.l (sp)+,#$3cf8
	rts
	 EVEN
draw_char46:
	 movem.l #$1f20,-(sp)
	move.w 28(sp),d2
	move.w penRow,d0
	muls.w #30,d0
	move.w d0,a2
	move.w penCol,d6
	move.w d6,d1
	subq.w #4,d1
	move.w d1,d0
	asr.w #3,d0
	and.l #65534,d0
	add.l a2,d0
	move.l d0,a1
	lea 19456(a1),a1
	and.w #15,d1
	moveq.l #24,d0
	sub.w d1,d0
	moveq.l #5,d3
	move.w d0,d4
	ext.l d4
	moveq.l #15,d5
	lsl.l d4,d5
	not.l d5
	move.w d2,d0
	lsl.w #2,d0
	add.w d2,d0
	add.w d2,d0
	move.w d0,a0
	add.l #TextFont46-192,a0
	tst.w d6
	 bne LSide31
	lea 19454(a2),a1
LSide31:
	tst.b penColor+1
	 bge LSide32
	clr.w d2
	 EVEN
LSide33:
	move.l (a1),d1
	and.l d5,d1
	move.b (a0)+,d0
	move.b d0,d2
	move.w d2,d0
	not.w d0
	moveq.l #15,d7
	and.l d7,d0
	lsl.l d4,d0
	or.l d0,d1
	move.l d1,(a1)
	lea 30(a1),a1
	dbra d3,LSide33
	 bra LSide37
	 EVEN
LSide32:
	moveq.l #0,d2
	 EVEN
LSide38:
	move.l (a1),d0
	and.l d5,d0
	move.b (a0)+,d1
	move.b d1,d2
	move.l d2,d1
	lsl.l d4,d1
	or.l d1,d0
	move.l d0,(a1)
	lea 30(a1),a1
	dbra d3,LSide38
LSide37:
	addq.w #4,d6
	move.w d6,penCol
	 movem.l (sp)+,#$4f8
	rts
	 EVEN
draw_text_screen:
	subq.w #8,sp
	 movem.l #$1f3e,-(sp)
	move.w 52(sp),d6
	move.w 54(sp),d7
	move.l #19696,40(sp)
	move.l 56(sp),a3
	move.w select,d0
	 ble LSide43
	move.l curs_ptr,a5
	move.l gap_ptr,a0
	lea 0(a0,d0.w),a6
LSide44:
	subq.w #1,d6
	cmp.w #-1,d6
	 beq LSide95
LSide93:
	move.l 40(sp),a4
	clr.b d5
	clr.w d4
	cmp.w d4,d7
	 ble LSide97
	 EVEN
LSide92:
	tst.b d5
	 bne LSide98
	clr.w d3
	cmp.l a5,a3
	 bcs LSide54
	cmp.l a3,a6
	 bls LSide54
	moveq.l #1,d3
LSide54:
	move.l curs_ptr,d2
	cmp.l a3,d2
	 beq LSide99
LSide55:
	move.b (a3),d1
	ext.w d1
	cmp.w #13,d1
	 beq LSide100
LSide56:
	tst.w d1
	 beq LSide57
	cmp.w #31,d1
	 bgt LSide57
	cmp.w #10,d1
	 beq LSide57
	cmp.w #-1,d1
	 beq LSide57
	moveq.l #127,d1
	 EVEN
LSide57:
	move.w d1,d0
	addq.w #1,d0
	cmp.w #1,d0
	 bls LSide58
	addq.l #1,a3
LSide58:
	cmp.w #10,d1
	 beq LSide60
	cmp.w #-1,d1
	 beq LSide60
	cmp.l a5,a3
	 bcs LSide62
	cmp.l a3,a6
	 bls LSide62
	or.w #2,d3
LSide62:
	cmp.l a3,d2
	 beq LSide101
LSide63:
	move.b (a3),d2
	ext.w d2
	cmp.w #13,d2
	 beq LSide102
LSide64:
	tst.w d2
	 beq LSide65
	cmp.w #31,d2
	 bgt LSide65
	cmp.w #10,d2
	 beq LSide65
	cmp.w #-1,d2
	 beq LSide65
	moveq.l #127,d2
LSide65:
	move.w d2,d0
	addq.w #1,d0
	cmp.w #1,d0
	 bls LSide66
	addq.l #1,a3
LSide66:
	cmp.w #10,d2
	 beq LSide68
	cmp.w #-1,d2
	 beq LSide68
	 EVEN
LSide53:
	move.w d1,d0
	lsl.w #2,d0
	add.w d1,d0
	add.w d1,d0
	move.w d0,a0
	move.l a0,a2
	add.l #TextFont46-192,a2
	move.w d2,d0
	lsl.w #2,d0
	add.w d2,d0
	add.w d2,d0
	move.w d0,a0
	add.l #TextFont46-192,a0
	move.l a4,a1
	addq.l #1,a4
	clr.b (a1)
	lea 30(a1),a1
	moveq.l #5,d2
	cmp.w #1,d3
	 beq LSide75
	 ble LSide103
	cmp.w #2,d3
	 beq LSide80
LSide85:
	clr.w d1
	 EVEN
LSide86:
	move.b (a2)+,d0
	move.b d0,d1
	move.w d1,d0
	lsl.w #4,d0
	or.b (a0)+,d0
	not.b d0
	move.b d0,(a1)
	lea 30(a1),a1
	dbra d2,LSide86
LSide50:
	addq.w #2,d4
	cmp.w d4,d7
	 bgt LSide92
LSide97:
	add.l #210,40(sp)
	dbra d6,LSide93
	 bra LSide95
	 EVEN
LSide80:
	clr.w d3
	 EVEN
LSide81:
	move.b (a2)+,d0
	move.b d0,d3
	move.w d3,d1
	lsl.w #4,d1
	move.b (a0)+,d0
	not.b d0
	and.b #15,d0
	or.b d1,d0
	move.b d0,(a1)
	lea 30(a1),a1
	dbra d2,LSide81
	 bra LSide50
	 EVEN
LSide103:
	clr.w d1
	tst.w d3
	 bne LSide85
	 EVEN
LSide71:
	move.b (a2)+,d0
	move.b d0,d1
	move.w d1,d0
	lsl.w #4,d0
	move.b (a0)+,d3
	or.b d0,d3
	move.b d3,(a1)
	lea 30(a1),a1
	dbra d2,LSide71
	 bra LSide50
	 EVEN
LSide75:
	clr.w d1
	 EVEN
LSide76:
	move.b (a2)+,d0
	move.b d0,d1
	move.w d1,d0
	not.w d0
	lsl.w #4,d0
	move.b (a0)+,d3
	or.b d0,d3
	move.b d3,(a1)
	lea 30(a1),a1
	dbra d2,LSide76
	 bra LSide50
	 EVEN
LSide68:
	moveq.l #1,d5
	moveq.l #32,d2
	 bra LSide53
	 EVEN
LSide102:
	addq.l #1,a3
	moveq.l #10,d2
	 bra LSide64
	 EVEN
LSide101:
	move.l gap_ptr,a3
	 bra LSide63
	 EVEN
LSide60:
	moveq.l #1,d5
LSide98:
	moveq.l #32,d1
	moveq.l #32,d2
	clr.w d3
	 bra LSide53
	 EVEN
LSide100:
	addq.l #1,a3
	moveq.l #10,d1
	 bra LSide56
	 EVEN
LSide99:
	move.l gap_ptr,a3
	 bra LSide55
	 EVEN
LSide43:
	move.l curs_ptr,a6
	lea 0(a6,d0.w),a5
	 bra LSide44
	 EVEN
LSide95:
	 movem.l (sp)+,#$7cf8
	addq.w #8,sp
	rts
	 EVEN
draw_str46:
	move.l a2,-(sp)
	move.l 8(sp),a2
	move.b (a2),d0
	 beq LSide110
	 EVEN
LSide108:
	ext.w d0
	move.w d0,-(sp)
	addq.l #1,a2
	 jsr draw_char46
	addq.l #2,sp
	move.b (a2),d0
	 bne LSide108
LSide110:
	move.l (sp)+,a2
	rts
	 EVEN
draw_str_center46:
	move.l d3,-(sp)
	move.l 8(sp),d3
	move.l d3,-(sp)
	 jsr strlen
	add.l d0,d0
	moveq.l #120,d1
	sub.w d0,d1
	move.w d1,penCol
	move.l d3,-(sp)
	 jsr draw_str46
	addq.w #8,penRow
	addq.l #8,sp
	move.l (sp)+,d3
	rts
	 EVEN
print_str:
	link.w a6,#0
	pea 12(a6)
	move.l 8(a6),-(sp)
	clr.l -(sp)
	pea draw_char46
	 jsr vcbprintf
	lea 16(sp),sp
	unlk a6
	rts
	 EVEN
prepare_bottom:
	move.w #240,-(sp)
	pea (23086).w
	 jsr bzero
	addq.w #2,sp
	move.l #30,(sp)
	move.w #255,-(sp)
	pea (23056).w
	 jsr memset
	clr.w penCol
	move.w #121,penRow
	move.w #1,penColor
	lea 10(sp),sp
	rts
	 EVEN
show_msg:
	 jsr prepare_bottom
	move.l 4(sp),-(sp)
	 jsr draw_str46
	addq.l #4,sp
	rts
LSideC4:
	 dc.b "Build",0
LSideC5:
	 dc.b "Exec",0
LSideC6:
	 dc.b "Goto",0
LSideC7:
	 dc.b "Find",0
LSideC8:
	 dc.b "Replace",0
LSideC9:
	 dc.b "Config",0
LSideC10:
	 dc.b "About",0
	
	 EVEN
menu.0:
	 dc.l	LSideC4
	 dc.l	LSideC5
	 dc.l	LSideC6
	 dc.l	LSideC7
	 dc.l	LSideC8
	 dc.l	LSideC9
	 dc.l	LSideC10
	
LSideC11:
	 dc.b "F%1d %s",0
	 EVEN
draw_menu_bar:
	move.l a2,-(sp)
	move.l d3,-(sp)
	 jsr prepare_bottom
	clr.w d3
	lea (menu.0),a2
	 EVEN
LSide120:
	move.w d3,d0
	ext.l d0
	lsl.l #2,d0
	move.l 0(a2,d0.l),-(sp)
	addq.w #1,d3
	move.w d3,-(sp)
	pea LSideC11
	 jsr print_str
	addq.w #2,penCol
	lea 10(sp),sp
	cmp.w #6,d3
	 ble LSide120
	move.b #1,refresh
	move.l (sp)+,d3
	move.l (sp)+,a2
	rts
	 EVEN
turn_off:
	 jsr off
	move.w key_delay,-(sp)
	 jsr OSInitKeyInitDelay
	move.w key_rate,-(sp)
	 jsr OSInitBetweenKeyDelay
	addq.l #4,sp
	rts
	
indic_spr.1:
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	0
	 dc.b	31
	 dc.b	17
	 dc.b	29
	 dc.b	25
	 dc.b	23
	 dc.b	17
	 dc.b	4
	 dc.b	14
	 dc.b	31
	 dc.b	14
	 dc.b	4
	 dc.b	0
	 dc.b	4
	 dc.b	14
	 dc.b	31
	 dc.b	14
	 dc.b	14
	 dc.b	0
	 dc.b	0
	 dc.b	6
	 dc.b	10
	 dc.b	10
	 dc.b	6
	 dc.b	0
	 dc.b	31
	 dc.b	25
	 dc.b	21
	 dc.b	21
	 dc.b	25
	 dc.b	31
	 dc.b	31
	 dc.b	27
	 dc.b	21
	 dc.b	17
	 dc.b	21
	 dc.b	21
	
	 EVEN
get_key:
	link.w a6,#-4
	move.l d4,-(sp)
	move.l d3,-(sp)
	 jsr kbd_queue
	move.l a0,d4
	clr.w d3
	tst.b cursor_on
	 bne LSide151
LSide150:
	move.w #2,-(sp)
	 jsr OSTimerRestart
	addq.l #2,sp
	 EVEN
LSide126:
	move.l d4,-(sp)
	pea -2(a6)
	 jsr OSdequeue
	addq.l #8,sp
	tst.w d0
	 beq LSide152
	move.w #2,-(sp)
	 jsr OSTimerExpired
	addq.l #2,sp
	tst.w d0
	 bne LSide153
	move.w KEY_STATUS,d0
	ext.l d0
	moveq.l #1,d2
	btst #12,d0
	 bne LSide131
	moveq.l #2,d2
	btst #13,d0
	 bne LSide131
	moveq.l #3,d2
	btst #14,d0
	 bne LSide131
	clr.w d2
	 EVEN
LSide131:
	cmp.w disp_indic,d2
	 beq LSide136
	move.w d2,d0
	lsl.w #2,d0
	add.w d2,d0
	add.w d2,d0
	move.w d0,a0
	add.l #indic_spr.1,a0
	move.w #19485,a1
	moveq.l #6,d1
	 EVEN
LSide141:
	move.b (a1),d0
	and.b #-32,d0
	move.b d0,(a1)
	or.b (a0)+,d0
	move.b d0,(a1)
	subq.w #1,d1
	lea 30(a1),a1
	 bne LSide141
	move.w d2,disp_indic
LSide136:
	addq.w #1,d3
	move.w d3,d0
	addq.w #1,d0
	eor.w d3,d0
	and.w #8192,d0
	 beq LSide126
	tst.b cursor_on
	 beq LSide126
	move.w #129,-(sp)
	move.w curRow,d0
	move.w d0,d1
	addq.w #6,d1
	move.w d1,-(sp)
	move.w d0,-(sp)
	move.w curCol,-(sp)
	 jsr draw_vline
	addq.l #8,sp
	 bra LSide126
	 EVEN
LSide153:
	 jsr turn_off
	 bra LSide150
	 EVEN
LSide152:
	move.w -2(a6),d0
	and.w #-2049,d0
	move.w d0,-2(a6)
	cmp.w #8459,d0
	 beq LSide146
	cmp.w #4363,d0
	 beq LSide146
LSide145:
	tst.b cursor_on
	 beq LSide147
	clr.w -(sp)
	move.w curRow,d0
	move.w d0,d1
	addq.w #6,d1
	move.w d1,-(sp)
	move.w d0,-(sp)
	move.w curCol,-(sp)
	 jsr draw_vline
	addq.l #8,sp
	 bra LSide147
	 EVEN
LSide146:
	 jsr turn_off
	 bra LSide145
	 EVEN
LSide151:
	move.w #1,-(sp)
	move.w curRow,d0
	move.w d0,d1
	addq.w #6,d1
	move.w d1,-(sp)
	move.w d0,-(sp)
	move.w curCol,-(sp)
	 jsr draw_vline
	addq.l #8,sp
	 bra LSide150
	 EVEN
LSide147:
	move.w -2(a6),d0
	move.l -12(a6),d3
	move.l -8(a6),d4
	unlk a6
	rts
LSideC13:
	 dc.b "Error opening '%s'",0
LSideC12:
	 dc.b "Out of memory",0
	 EVEN
error:
	move.l d3,-(sp)
	move.w 8(sp),d3
	 jsr prepare_bottom
	cmp.w #1,d3
	 beq LSide157
	move.l filename,-(sp)
	pea LSideC13
	 jsr print_str
	addq.l #8,sp
	 bra LSide156
	 EVEN
LSide157:
	pea LSideC12
	 jsr draw_str46
	addq.l #4,sp
LSide156:
	 jsr get_key
	 jsr draw_menu_bar
	move.w d3,d0
	move.l (sp)+,d3
	rts
LSideC14:
	 dc.b "%s  [ENTER]=Yes [ESC]=No",0
	 EVEN
prompt:
	 jsr prepare_bottom
	move.l 4(sp),-(sp)
	pea LSideC14
	 jsr print_str
	 jsr get_key
	addq.l #8,sp
	cmp.w #13,d0
	seq d0
	ext.w d0
	neg.w d0
	rts
LSideC15:
	 dc.b "%s_ ",0
	 EVEN
input_str:
	 movem.l #$1e20,-(sp)
	move.l 24(sp),a2
	move.w 28(sp),d6
	move.w 30(sp),d5
	move.l a2,-(sp)
	 jsr strlen
	move.w d0,d3
	move.w penCol,d4
	addq.l #4,sp
	 EVEN
LSide160:
	clr.b 0(a2,d3.w)
	move.w d4,penCol
	move.l a2,-(sp)
	pea LSideC15
	 jsr print_str
	 jsr get_key
	move.w d0,d1
	addq.l #8,sp
	cmp.w #257,d0
	 beq LSide175
LSide163:
	cmp.w d3,d6
	 ble LSide162
	move.w d1,d0
	add.w #-48,d0
	cmp.w #9,d0
	 bls LSide165
	cmp.w #2,d5
	 beq LSide176
LSide166:
	cmp.w #1,d5
	 beq LSide177
	 EVEN
LSide162:
	cmp.w #13,d1
	 beq LSide178
LSide174:
	cmp.w #264,d1
	 bne LSide160
	 bra LSide161
	 EVEN
LSide178:
	tst.w d3
	 beq LSide174
	 bra LSide161
	 EVEN
LSide177:
	clr.w d2
	cmp.w #9,d0
	 bls LSide168
	move.w d1,d0
	add.w #-65,d0
	cmp.w #25,d0
	 bls LSide168
	add.w #-32,d0
	cmp.w #25,d0
	 bhi LSide167
LSide168:
	moveq.l #1,d2
LSide167:
	tst.w d2
	 bne LSide165
	cmp.w #95,d1
	 beq LSide165
	cmp.w #92,d1
	 bne LSide162
	 EVEN
LSide165:
	move.w d3,a0
	addq.w #1,d3
	cmp.w #1,d5
	 beq LSide179
	move.b d1,d0
LSide170:
	move.b d0,0(a0,a2.l)
	 bra LSide162
	 EVEN
LSide179:
	move.w d1,d2
	move.w d1,d0
	add.w #-65,d0
	cmp.w #25,d0
	 bhi LSide171
	add.w #32,d2
LSide171:
	move.b d2,d0
	 bra LSide170
	 EVEN
LSide176:
	cmp.w #31,d1
	 ble LSide166
	cmp.w #127,d1
	 ble LSide165
	 bra LSide166
	 EVEN
LSide175:
	tst.w d3
	 beq LSide163
	subq.w #1,d3
	 bra LSide163
	 EVEN
LSide161:
	cmp.w #13,d1
	seq d0
	ext.w d0
	neg.w d0
	 movem.l (sp)+,#$478
	rts
	 EVEN
input_num:
	lea -12(sp),sp
	move.l d4,-(sp)
	move.l d3,-(sp)
	move.l 24(sp),-(sp)
	 jsr show_msg
	clr.b 14(sp)
	clr.w -(sp)
	move.w #4,-(sp)
	moveq.l #18,d4
	add.l sp,d4
	move.l d4,-(sp)
	 jsr input_str
	move.b d0,d3
	lea 12(sp),sp
	 beq LSide181
	move.l d4,a0
	 jsr atoi
	move.l 28(sp),a0
	move.w d0,(a0)
LSide181:
	 jsr draw_menu_bar
	move.b d3,d0
	ext.w d0
	move.l (sp)+,d3
	move.l (sp)+,d4
	lea 12(sp),sp
	rts
LSideC16:
	 dc.b "[S-IDE]   file:%s",0
	 EVEN
draw_title_bar:
	move.w #240,-(sp)
	pea (19456).w
	 jsr bzero
	addq.w #2,sp
	move.l #30,(sp)
	move.w #255,-(sp)
	pea (19636).w
	 jsr memset
	move.w #1,penColor
	clr.w penRow
	clr.w penCol
	move.l filename,-(sp)
	pea LSideC16
	 jsr print_str
	clr.w disp_indic
	lea 18(sp),sp
	rts
LSideC17:
	 dc.b "The Small Integrated",0
LSideC18:
	 dc.b "Development Environment",0
LSideC19:
	 dc.b "v(0).1 by Clem Vasseur",0
LSideC20:
	 dc.b "<nitro@epita.fr>",0
LSideC21:
	 dc.b "Adapted by PpHd for PedroM",0
LSideC22:
	 dc.b "<ppelissi@caramail.com>",0
	 EVEN
about:
	move.l a2,-(sp)
	move.w #60,-(sp)
	move.w #112,-(sp)
	 jsr window
	addq.w #2,penRow
	move.w #1,penColor
	pea LSideC17
	lea draw_str_center46,a2
	 jsr (a2)
	pea LSideC18
	 jsr (a2)
	pea LSideC19
	 jsr (a2)
	pea LSideC20
	 jsr (a2)
	pea LSideC21
	 jsr (a2)
	pea LSideC22
	 jsr (a2)
	 jsr get_key
	 jsr draw_menu_bar
	lea 28(sp),sp
	move.l (sp)+,a2
	rts
LSideC25:
	 dc.b "%3d",0
LSideC23:
	 dc.b "Yes",0
LSideC24:
	 dc.b "No ",0
	 EVEN
draw_str_config:
	 movem.l #$1820,-(sp)
	move.w 20(sp),d3
	move.l 22(sp),a2
	move.w penCol,d4
	move.w #1,penColor
	move.l 16(sp),-(sp)
	 jsr draw_str46
	addq.l #4,sp
	tst.w d3
	 beq LSide186
	cmp.w #1,d3
	 beq LSide189
	move.l a2,-(sp)
	 jsr draw_str46
	move.l a2,-(sp)
	 jsr strlen
	move.w d0,d3
	addq.l #8,sp
	cmp.w #25,d0
	 bgt LSide185
	moveq.l #26,d0
	sub.w d3,d0
	move.w d0,d3
	 EVEN
LSide195:
	move.w #32,-(sp)
	 jsr draw_char46
	addq.l #2,sp
	subq.w #1,d3
	 bne LSide195
	 bra LSide185
	 EVEN
LSide189:
	move.w (a2),-(sp)
	pea LSideC25
	 jsr print_str
	addq.l #6,sp
	 bra LSide185
	 EVEN
LSide186:
	tst.b (a2)
	 beq LSide187
	move.l #LSideC23,d0
LSide188:
	move.l d0,-(sp)
	 jsr draw_str46
	addq.l #4,sp
	 bra LSide185
	 EVEN
LSide187:
	move.l #LSideC24,d0
	 bra LSide188
	 EVEN
LSide185:
	addq.w #8,penRow
	move.w d4,penCol
	 movem.l (sp)+,#$418
	rts
LSideC26:
	 dc.b "[UP]/[DOWN]=Move  [LEFT]/[RIGHT]=Change",0
LSideC27:
	 dc.b "  Build: ",0
LSideC28:
	 dc.b "  Exec : ",0
LSideC29:
	 dc.b "  2nd Text: ",0
LSideC30:
	 dc.b "  Auto insert brackets: ",0
LSideC31:
	 dc.b "  Auto indent: ",0
LSideC32:
	 dc.b "  Key repeat delay: ",0
LSideC33:
	 dc.b "  Key repeat rate: ",0
	 EVEN
config:
	lea -32(sp),sp
	 movem.l #$1f30,-(sp)
	clr.w d5
	pea LSideC26
	 jsr show_msg
	move.w #60,-(sp)
	move.w #158,-(sp)
	 jsr window
	move.w penRow,d6
	addq.w #2,d6
	move.w penCol,d7
	addq.l #8,sp
	 EVEN
LSide199:
	move.w d6,penRow
	move.w d7,penCol
	pea exec_name
	move.w #2,-(sp)
	pea LSideC27
	lea draw_str_config,a2
	 jsr (a2)
	pea exec_name2
	move.w #2,-(sp)
	pea LSideC28
	 jsr (a2)
	pea text2_name
	move.w #2,-(sp)
	pea LSideC29
	 jsr (a2)
	pea auto_code
	clr.w -(sp)
	pea LSideC30
	 jsr (a2)
	lea 36(sp),sp
	move.l #auto_indent,(sp)
	clr.w -(sp)
	pea LSideC31
	 jsr (a2)
	pea key_delay
	move.w #1,-(sp)
	pea LSideC32
	 jsr (a2)
	pea key_rate
	move.w #1,-(sp)
	pea LSideC33
	 jsr (a2)
	move.w d5,d0
	lsl.w #3,d0
	add.w d6,d0
	move.w d0,penRow
	addq.w #2,penCol
	move.w #62,-(sp)
	 jsr draw_char46
	clr.w d3
	lea 32(sp),sp
	 jsr get_key
	move.w d0,d4
	cmp.w #338,d0
	 beq LSide205
	 bgt LSide211
	cmp.w #337,d0
	 beq LSide204
LSide202:
	tst.w d3
	 beq LSide201
	cmp.w #5,d5
	 bhi LSide224
	clr.l d0
	move.w d5,d0
	add.l d0,d0
	.set LSideI226,.+2
	move.w LSide226(pc,d0.l),d0
	jmp 2(pc,d0.w)
	 EVEN
	 EVEN
LSide226:
	 dc.w LSide214-LSide226
	 dc.w LSide216-LSide226
	 dc.w LSide218-LSide226
	 dc.w LSide220-LSide226
	 dc.w LSide221-LSide226
	 dc.w LSide222-LSide226
	 EVEN
LSide214:
	subq.w #4,penCol
	move.w #32,-(sp)
	 jsr draw_char46
	add.w #30,penCol
	move.l #exec_name,d3
LSide231:
	lea 30(sp),a2
	move.w #26,-(sp)
	move.l a2,-(sp)
	move.l d3,-(sp)
	lea bcopy,a3
	 jsr (a3)
	lea 10(sp),sp
	move.w #2,-(sp)
	move.w #25,-(sp)
	move.l a2,-(sp)
	 jsr input_str
	lea 10(sp),sp
	tst.b d0
	 bne LSide232
	 EVEN
LSide201:
	cmp.w #13,d4
	 beq LSide200
	cmp.w #264,d4
	 bne LSide199
	 bra LSide200
	 EVEN
LSide232:
	move.w #26,-(sp)
	move.l d3,-(sp)
	move.l a2,-(sp)
	 jsr (a3)
	lea 10(sp),sp
	 bra LSide201
	 EVEN
LSide216:
	subq.w #4,penCol
	move.w #32,-(sp)
	 jsr draw_char46
	add.w #30,penCol
	move.l #exec_name2,d3
	 bra LSide231
	 EVEN
LSide218:
	subq.w #4,penCol
	move.w #32,-(sp)
	 jsr draw_char46
	add.w #42,penCol
	move.l #text2_name,d3
	lea 30(sp),a2
	move.w #18,-(sp)
	move.l a2,-(sp)
	move.l d3,-(sp)
	lea bcopy,a3
	 jsr (a3)
	lea 10(sp),sp
	move.w #1,-(sp)
	move.w #17,-(sp)
	move.l a2,-(sp)
	 jsr input_str
	lea 10(sp),sp
	tst.b d0
	 beq LSide201
	move.w #18,-(sp)
	move.l d3,-(sp)
	move.l a2,-(sp)
	 jsr (a3)
	lea 10(sp),sp
	move.w #5,text2_pos
	 bra LSide201
	 EVEN
LSide220:
	eor.b #1,auto_code
	 bra LSide201
	 EVEN
LSide221:
	eor.b #1,auto_indent
	 bra LSide201
	 EVEN
LSide222:
	move.w d3,d0
	lsl.w #3,d0
	add.w d3,d0
	add.w d3,d0
	move.w key_delay,d3
	add.w d0,d3
	move.w d3,d0
	subq.w #1,d0
	cmp.w #398,d0
	 bhi LSide201
	move.w d3,key_delay
	move.w d3,-(sp)
	 jsr OSInitKeyInitDelay
LSide229:
	addq.l #2,sp
	 bra LSide201
	 EVEN
LSide224:
	add.w key_rate,d3
	move.w d3,d0
	subq.w #1,d0
	cmp.w #48,d0
	 bhi LSide201
	move.w d3,key_rate
	move.w d3,-(sp)
	 jsr OSInitBetweenKeyDelay
	 bra LSide229
	 EVEN
LSide204:
	moveq.l #-1,d3
	 bra LSide202
	 EVEN
LSide211:
	cmp.w #340,d0
	 beq LSide203
	cmp.w #344,d0
	 bne LSide202
	cmp.w #5,d5
	 bgt LSide202
	addq.w #1,d5
	 bra LSide202
	 EVEN
LSide203:
	moveq.l #1,d3
	 bra LSide202
	 EVEN
LSide205:
	tst.w d5
	 beq LSide202
	subq.w #1,d5
	 bra LSide202
	 EVEN
LSide200:
	 jsr draw_menu_bar
	 movem.l (sp)+,#$cf8
	lea 32(sp),sp
	rts
	 EVEN
forget_selection:
	tst.w select
	 beq LSide233
	clr.w select
	move.b #1,refresh
LSide233:
	rts
	nop
	 EVEN
move_right:
	 jsr forget_selection
	move.l gap_ptr,a1
	cmp.b #-1,(a1)
	 beq LSide235
	move.w curCol,d0
	addq.w #4,d0
	move.w d0,curCol
	move.b (a1),d1
	cmp.b #10,d1
	 beq LSide238
	cmp.w #239,d0
	 ble LSide237
LSide238:
	cmp.b #10,d1
	 beq LSide247
LSide239:
	clr.w curCol
	move.w curRow,d1
	move.w d1,d0
	addq.w #7,d0
	move.w d0,curRow
	cmp.w #119,d0
	 ble LSide237
	move.w #240,d0
	move.w d1,curRow
	move.l page_ptr,a0
	addq.l #1,page_ptr
	cmp.b #10,(a0)
	 beq LSide242
	 EVEN
LSide245:
	subq.w #4,d0
	tst.w d0
	 ble LSide242
	move.l page_ptr,a0
	addq.l #1,page_ptr
	cmp.b #10,(a0)
	 bne LSide245
LSide242:
	move.b #1,refresh
LSide237:
	move.l curs_ptr,a0
	move.b (a1),(a0)
	addq.l #1,gap_ptr
	addq.l #1,curs_ptr
LSide235:
	rts
	 EVEN
LSide247:
	addq.w #1,line
	 bra LSide239
	nop
	 EVEN
move_left:
	 jsr forget_selection
	move.l curs_ptr,a0
	cmp.l file_ptr,a0
	 beq LSide248
	move.l gap_ptr,d0
	move.l d0,d1
	subq.l #1,d1
	move.l d1,gap_ptr
	subq.l #1,a0
	move.l a0,curs_ptr
	move.l d0,a1
	move.b (a0),-1(a1)
	move.w curCol,d0
	subq.w #4,d0
	move.w d0,curCol
	move.l gap_ptr,a0
	move.b (a0),d1
	cmp.b #10,d1
	 beq LSide251
	tst.w d0
	 blt LSide251
LSide248:
	rts
	 EVEN
LSide251:
	clr.w d0
	cmp.b #10,d1
	 beq LSide261
LSide252:
	move.l curs_ptr,a1
	move.l file_ptr,d1
	cmp.l a1,d1
	 beq LSide254
	cmp.b #10,-1(a1)
	 beq LSide254
	 EVEN
LSide257:
	addq.w #1,d0
	move.l a1,a0
	sub.w d0,a0
	cmp.l a0,d1
	 beq LSide254
	cmp.b #10,-1(a0)
	 bne LSide257
LSide254:
	lsl.w #2,d0
	ext.l d0
	divs.w #240,d0
	move.l d0,d2
	swap d2
	move.w d2,curCol
	move.w curRow,d1
	move.w d1,d0
	subq.w #7,d0
	move.w d0,curRow
	cmp.w #7,d0
	 bgt LSide248
	move.w d1,curRow
	move.w d2,d0
	 blt LSide262
LSide259:
	asr.w #2,d0
	sub.w d0,a1
	move.l a1,page_ptr
	move.b #1,refresh
	 bra LSide248
	 EVEN
LSide262:
	addq.w #3,d0
	 bra LSide259
	 EVEN
LSide261:
	subq.w #1,line
	 bra LSide252
	nop
	 EVEN
move_down:
	move.l d4,-(sp)
	move.l d3,-(sp)
	move.w curCol,d4
	moveq.l #1,d3
	 EVEN
LSide264:
	 jsr move_right
	move.w curCol,d1
	sne d0
	and.b d0,d3
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #-1,d0
	 beq LSide263
	tst.b d3
	 bne LSide264
	cmp.b #10,d0
	 beq LSide263
	cmp.w d1,d4
	 bgt LSide264
LSide263:
	move.l (sp)+,d3
	move.l (sp)+,d4
	rts
	 EVEN
move_up:
	move.l d4,-(sp)
	move.l d3,-(sp)
	move.w curCol,d4
	move.w d4,d0
	moveq.l #1,d3
	 EVEN
LSide271:
	tst.w d0
	sne d0
	and.b d0,d3
	 jsr move_left
	move.l curs_ptr,d0
	cmp.l file_ptr,d0
	 beq LSide270
	tst.b d3
	 beq LSide278
	move.w curCol,d0
	 bra LSide271
	 EVEN
LSide278:
	move.w curCol,d0
	cmp.w d0,d4
	 blt LSide271
LSide270:
	move.l (sp)+,d3
	move.l (sp)+,d4
	rts
	 EVEN
move_right_word:
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #-1,d0
	 beq LSide281
	cmp.b #32,d0
	 beq LSide281
	cmp.b #10,d0
	 beq LSide281
LSide284:
	 jsr move_right
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #-1,d0
	 beq LSide281
	cmp.b #32,d0
	 beq LSide281
	cmp.b #10,d0
	 bne LSide284
LSide281:
	move.b (a0),d0
	cmp.b #-1,d0
	 beq LSide279
	cmp.b #32,d0
	 beq LSide289
	cmp.b #10,d0
	 beq LSide289
LSide279:
	rts
	 EVEN
LSide289:
	 jsr move_right
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #-1,d0
	 beq LSide279
	cmp.b #32,d0
	 beq LSide289
	cmp.b #10,d0
	 beq LSide289
	 bra LSide279
	nop
	 EVEN
move_left_word:
	 EVEN
LSide293:
	 jsr move_left
	move.l curs_ptr,d2
	move.l file_ptr,d1
	cmp.l d2,d1
	 beq LSide294
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #32,d0
	 beq LSide293
	cmp.b #10,d0
	 beq LSide293
LSide294:
	cmp.l d2,d1
	 beq LSide299
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #32,d0
	 beq LSide299
	cmp.b #10,d0
	 beq LSide299
LSide302:
	 jsr move_left
	move.l curs_ptr,d2
	move.l file_ptr,d1
	cmp.l d2,d1
	 beq LSide299
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #32,d0
	 beq LSide299
	cmp.b #10,d0
	 bne LSide302
LSide299:
	cmp.l d2,d1
	 beq LSide292
	 jsr move_right
LSide292:
	rts
	nop
	 EVEN
del:
	 jsr clear_selection
	tst.b d0
	 bne LSide305
	move.l gap_ptr,a0
	cmp.b #-1,(a0)
	 beq LSide305
	addq.l #1,a0
	move.l a0,gap_ptr
	move.b #1,modified
	move.b #1,refresh
LSide305:
	rts
	nop
	 EVEN
back:
	 jsr clear_selection
	tst.b d0
	 bne LSide308
	move.l curs_ptr,d0
	cmp.l file_ptr,d0
	 beq LSide308
	 jsr move_left
	 jsr del
LSide308:
	rts
	nop
	 EVEN
clear_selection:
	move.l d3,-(sp)
	move.w select,d3
	 jsr forget_selection
	tst.w d3
	 ble LSide312
	subq.w #1,d3
	cmp.w #-1,d3
	 beq LSide317
	 EVEN
LSide316:
	 jsr del
	dbra d3,LSide316
	 bra LSide317
	 EVEN
LSide312:
	tst.w d3
	 bge LSide317
	addq.w #1,d3
	cmp.w #1,d3
	 beq LSide317
LSide322:
	 jsr back
	addq.w #1,d3
	cmp.w #1,d3
	 bne LSide322
	 EVEN
LSide317:
	move.b d3,d0
	ext.w d0
	move.l (sp)+,d3
	rts
	 EVEN
write:
	move.l d3,-(sp)
	move.w 8(sp),d3
	 jsr clear_selection
	move.l curs_ptr,d0
	addq.l #2,d0
	move.l gap_ptr,a1
	cmp.l d0,a1
	 bhi LSide326
	move.l file_ptr,d0
	move.l end_ptr,a0
	sub.l d0,a0
	pea 513(a0)
	move.l d0,-(sp)
	 jsr realloc
	addq.l #8,sp
	cmp.w #0,a0
	 beq LSide327
	move.l a0,d0
	sub.l file_ptr,d0
	move.l a0,file_ptr
	add.l d0,page_ptr
	add.l d0,curs_ptr
	move.l gap_ptr,a1
	add.l d0,a1
	move.l a1,gap_ptr
	move.l end_ptr,a0
	add.l d0,a0
	move.l a0,end_ptr
	sub.l a1,a0
	pea 1(a0)
	move.l a1,-(sp)
	pea 512(a1)
	 jsr memmove
	move.l a0,a1
	move.l a0,gap_ptr
	add.l #512,end_ptr
	lea 12(sp),sp
LSide326:
	move.l a1,d1
	subq.l #1,d1
	move.l d1,gap_ptr
	move.b d3,-1(a1)
	 jsr move_right
	move.b #1,modified
	move.b #1,refresh
	tst.b auto_code
	 beq LSide339
	cmp.w #40,d3
	 beq LSide340
	cmp.w #91,d3
	 beq LSide341
	cmp.w #123,d3
	 beq LSide342
	cmp.w #39,d3
	 beq LSide331
	clr.w d0
	cmp.w #34,d3
	 bne LSide325
	 EVEN
LSide331:
	move.l gap_ptr,a1
	subq.l #1,a1
	move.l a1,gap_ptr
	move.b d3,(a1)
LSide339:
	clr.w d0
	 bra LSide325
	 EVEN
LSide342:
	moveq.l #125,d3
	 bra LSide331
	 EVEN
LSide341:
	moveq.l #93,d3
	 bra LSide331
	 EVEN
LSide340:
	moveq.l #41,d3
	 bra LSide331
	 EVEN
LSide327:
	move.w #1,-(sp)
	 jsr error
	addq.l #2,sp
	 EVEN
LSide325:
	move.l (sp)+,d3
	rts
	 EVEN
clear_line:
	 jsr clear_selection
	tst.b d0
	 bne LSide343
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #10,d0
	 beq LSide343
	cmp.b #-1,d0
	 beq LSide343
	 EVEN
LSide349:
	 jsr del
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #10,d0
	 beq LSide343
	cmp.b #-1,d0
	 bne LSide349
LSide343:
	rts
	nop
	 EVEN
line_start:
	 jsr forget_selection
	move.l curs_ptr,a0
	cmp.l file_ptr,a0
	 beq LSide351
	cmp.b #10,-1(a0)
	 beq LSide351
	 EVEN
LSide356:
	 jsr move_left
	move.l curs_ptr,a0
	cmp.l file_ptr,a0
	 beq LSide351
	cmp.b #10,-1(a0)
	 bne LSide356
LSide351:
	rts
	nop
	 EVEN
line_end:
	 jsr forget_selection
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #-1,d0
	 beq LSide358
	cmp.b #10,d0
	 beq LSide358
	 EVEN
LSide363:
	 jsr move_right
	move.l gap_ptr,a0
	move.b (a0),d0
	cmp.b #-1,d0
	 beq LSide358
	cmp.b #10,d0
	 bne LSide363
LSide358:
	rts
	nop
	 EVEN
page_top:
	 jsr forget_selection
	move.l curs_ptr,d0
	cmp.l file_ptr,d0
	 beq LSide371
	 EVEN
LSide369:
	 jsr move_up
	move.l curs_ptr,d0
	cmp.l file_ptr,d0
	 bne LSide369
LSide371:
	rts
	nop
	 EVEN
page_end:
	 jsr forget_selection
	move.l gap_ptr,a0
	cmp.b #-1,(a0)
	 beq LSide378
	 EVEN
LSide376:
	 jsr move_down
	move.l gap_ptr,a0
	cmp.b #-1,(a0)
	 bne LSide376
LSide378:
	rts
	nop
	 EVEN
page_up:
	move.l d3,-(sp)
	moveq.l #15,d3
	 EVEN
LSide383:
	 jsr move_up
	dbra d3,LSide383
	move.l (sp)+,d3
	rts
	 EVEN
page_down:
	move.l d3,-(sp)
	moveq.l #15,d3
	 EVEN
LSide390:
	 jsr move_down
	dbra d3,LSide390
	move.l (sp)+,d3
	rts
	 EVEN
select_proc:
	move.l a2,-(sp)
	move.l d3,-(sp)
	move.w select,d3
	move.l curs_ptr,a2
	move.l 12(sp),a0
	 jsr (a0)
	lea 0(a2,d3.w),a0
	sub.w curs_ptr+2,a0
	move.w a0,select
	move.b #1,refresh
	move.l (sp)+,d3
	move.l (sp)+,a2
	rts
	 EVEN
select_right:
	pea move_right
	 jsr select_proc
	addq.l #4,sp
	rts
	 EVEN
select_left:
	pea move_left
	 jsr select_proc
	addq.l #4,sp
	rts
	 EVEN
select_up:
	pea move_up
	 jsr select_proc
	addq.l #4,sp
	rts
	 EVEN
select_down:
	pea move_down
	 jsr select_proc
	addq.l #4,sp
	rts
LSideC34:
	 dc.b "Goto line: ",0
	 EVEN
go_line:
	link.w a6,#-4
	pea -2(a6)
	pea LSideC34
	 jsr input_num
	addq.l #8,sp
	tst.b d0
	 beq LSide398
	move.w -2(a6),d0
	 bne LSide400
	moveq.l #1,d0
	move.w #1,-2(a6)
LSide400:
	move.w line,d1
	cmp.w d1,d0
	 blt LSide405
	 ble LSide398
	move.l gap_ptr,a0
	cmp.b #-1,(a0)
	 beq LSide398
	 EVEN
LSide411:
	 jsr move_down
	move.w -2(a6),d0
	cmp.w line,d0
	 ble LSide398
	move.l gap_ptr,a0
	cmp.b #-1,(a0)
	 bne LSide411
	 bra LSide398
	 EVEN
LSide405:
	 jsr move_up
	move.w -2(a6),d0
	cmp.w line,d0
	 blt LSide405
	 EVEN
LSide398:
	unlk a6
	rts
	 EVEN
clipboard_copy:
	move.l a2,-(sp)
	move.l d3,-(sp)
	move.w select,d1
	clr.w d0
	tst.w d1
	 beq LSide414
	 ble LSide416
	move.w d1,d3
	move.l gap_ptr,a2
LSide417:
	addq.w #1,d3
	move.w d3,a0
	move.l a0,-(sp)
	subq.w #1,d3
	move.w clipboard,-(sp)
	 jsr HeapRealloc
	addq.l #6,sp
	tst.w d0
	 beq LSide418
	move.w d0,clipboard
	move.w d0,-(sp)
	 jsr HeapDeref
	addq.l #2,sp
	subq.w #1,d3
	cmp.w #-1,d3
	 beq LSide428
	 EVEN
LSide426:
	cmp.l curs_ptr,a2
	 beq LSide429
LSide422:
	move.b (a2),d1
	cmp.b #13,d1
	 beq LSide430
LSide423:
	tst.b d1
	 beq LSide424
	cmp.b #31,d1
	 bgt LSide424
	cmp.b #10,d1
	 beq LSide424
	cmp.b #-1,d1
	 beq LSide424
	moveq.l #127,d1
	 EVEN
LSide424:
	move.b d1,d0
	addq.b #1,d0
	cmp.b #1,d0
	 bls LSide425
	addq.l #1,a2
LSide425:
	move.b d1,(a0)+
	dbra d3,LSide426
LSide428:
	st (a0)
	clr.w d0
	 bra LSide414
	 EVEN
LSide430:
	addq.l #1,a2
	moveq.l #10,d1
	 bra LSide423
	 EVEN
LSide429:
	move.l gap_ptr,a2
	 bra LSide422
	 EVEN
LSide418:
	move.w #1,-(sp)
	 jsr error
	addq.l #2,sp
	 bra LSide414
	 EVEN
LSide416:
	move.w d1,d3
	neg.w d3
	move.l curs_ptr,a2
	sub.w d3,a2
	 bra LSide417
	 EVEN
LSide414:
	move.l (sp)+,d3
	move.l (sp)+,a2
	rts
	 EVEN
clipboard_paste:
	move.l a2,-(sp)
	move.l d3,-(sp)
	move.b auto_code,d3
	move.w clipboard,d0
	 beq LSide431
	clr.b auto_code
	move.w d0,-(sp)
	 jsr HeapDeref
	move.l a0,a2
	addq.l #2,sp
	 EVEN
LSide433:
	move.b (a2),d0
	cmp.b #-1,d0
	 beq LSide434
	ext.w d0
	move.w d0,-(sp)
	addq.l #1,a2
	 jsr write
	addq.l #2,sp
	tst.w d0
	 beq LSide433
LSide434:
	move.b d3,auto_code
LSide431:
	move.l (sp)+,d3
	move.l (sp)+,a2
	rts
LSideC35:
	 dc.b "Find: ",0
	 EVEN
find:
	pea LSideC35
	 jsr show_msg
	move.w #2,-(sp)
	move.w #31,-(sp)
	pea find_str
	 jsr input_str
	lea 12(sp),sp
	tst.b d0
	 beq LSide438
	 EVEN
LSide439:
	 jsr move_right
	move.l gap_ptr,a0
	cmp.b #-1,(a0)
	 beq LSide438
	pea find_str
	 jsr strlen
	move.l d0,(sp)
	pea find_str
	move.l gap_ptr,-(sp)
	 jsr strncmp
	lea 12(sp),sp
	tst.w d0
	 bne LSide439
LSide438:
	 jsr draw_menu_bar
	rts
LSideC36:
	 dc.b "Replace: ",0
LSideC37:
	 dc.b "By: ",0
LSideC38:
	 dc.b "Replace [ENTER],Next [SPACE],All [A],Cancel [ESC]",0
	 EVEN
replace:
	 movem.l #$1030,-(sp)
	moveq.l #1,d3
	pea LSideC36
	lea show_msg,a3
	 jsr (a3)
	move.w #2,-(sp)
	move.w #31,-(sp)
	pea find_str
	lea input_str,a2
	 jsr (a2)
	lea 12(sp),sp
	tst.b d0
	 beq LSide445
	pea LSideC37
	 jsr (a3)
	move.w #2,-(sp)
	move.w #31,-(sp)
	pea replace_str
	 jsr (a2)
	lea 12(sp),sp
	tst.b d0
	 beq LSide445
	move.l gap_ptr,a0
	cmp.b #-1,(a0)
	 beq LSide445
	 EVEN
LSide451:
	 jsr move_right
	move.l gap_ptr,a0
	cmp.b #-1,(a0)
	 beq LSide452
	pea find_str
	 jsr strlen
	move.l d0,(sp)
	pea find_str
	move.l gap_ptr,-(sp)
	 jsr strncmp
	lea 12(sp),sp
	tst.w d0
	 bne LSide451
	move.l gap_ptr,a0
LSide452:
	cmp.b #-1,(a0)
	 beq LSide447
	lea find_str+1,a2
	tst.b find_str
	 bne LSide460
LSide477:
	move.l page_ptr,-(sp)
	move.w #60,-(sp)
	move.w #16,-(sp)
	 jsr draw_text_screen
	pea LSideC38
	 jsr show_msg
	lea 12(sp),sp
	moveq.l #13,d0
	cmp.w #1,d3
	 beq LSide480
LSide462:
	cmp.w #97,d0
	 beq LSide464
	 bgt LSide473
	cmp.w #13,d0
	 beq LSide465
LSide479:
	move.l gap_ptr,a0
LSide447:
	cmp.b #-1,(a0)
	 beq LSide445
	tst.w d3
	 bne LSide451
	 bra LSide445
	 EVEN
LSide465:
	 jsr del
	lea replace_str,a2
	move.b (a2),d0
	 beq LSide479
	 EVEN
LSide469:
	ext.w d0
	move.w d0,-(sp)
	addq.l #1,a2
	 jsr write
	addq.l #2,sp
	move.b (a2),d0
	 bne LSide469
	 bra LSide479
	 EVEN
LSide473:
	cmp.w #264,d0
	 bne LSide479
	clr.w d3
	 bra LSide479
	 EVEN
LSide464:
	moveq.l #2,d3
	 bra LSide465
	 EVEN
LSide480:
	 jsr get_key
	 bra LSide462
	 EVEN
LSide460:
	 jsr select_right
	tst.b (a2)+
	 bne LSide460
	 bra LSide477
	 EVEN
LSide445:
	 jsr draw_menu_bar
	 movem.l (sp)+,#$c08
	rts
	 EVEN
open_file:
	link.w a6,#-20
	 movem.l #$1030,-(sp)
	move.l a6,d3
	subq.l #1,d3
	sub.l a3,a3
	pea -20(a6)
	move.l filename,-(sp)
	 jsr TokenizeName
	addq.l #8,sp
	tst.w d0
	 bne LSide493
	clr.w -(sp)
	move.l d3,-(sp)
	 jsr SymFindPtr
	move.l a0,a2
	addq.l #6,sp
	cmp.w #0,a0
	 beq LSide483
	move.w 12(a0),-(sp)
	 jsr HToESI
	addq.l #2,sp
	cmp.b #-32,(a0)
	 beq LSide506
LSide493:
	move.w #2,-(sp)
LSide504:
	 jsr error
	addq.l #2,sp
	 bra LSide481
	 EVEN
LSide506:
	move.w 12(a2),-(sp)
	 jsr HeapDeref
	move.w (a0),d0
	subq.w #5,d0
	move.w d0,a2
	lea 4(a0),a3
	pea 513(a2)
	 jsr HeapAllocPtr
	move.l a0,d0
	move.l a0,file_ptr
	addq.l #6,sp
	 beq LSide505
	move.l a0,curs_ptr
	move.l a0,page_ptr
	add.l #512,d0
	move.l d0,gap_ptr
	move.l d0,end_ptr
	lea 1(a3),a1
	move.b (a1),d0
	 beq LSide492
	 EVEN
LSide491:
	cmp.b #13,d0
	 beq LSide507
	move.l end_ptr,a0
	move.b d0,(a0)
	addq.l #1,end_ptr
LSide486:
	addq.l #1,a1
	move.b (a1),d0
	 bne LSide491
LSide492:
	move.l end_ptr,a0
	st (a0)
	move.w #1,line
	clr.b modified
	clr.w select
	clr.w curCol
	move.w #8,curRow
	cmp.w #0,a3
	 beq LSide496
	move.w #1,a2
	move.w curs_ptr+2,d0
	sub.w file_ptr+2,d0
	addq.w #1,d0
	cmp.w -(a3),d0
	 bge LSide496
	 EVEN
LSide501:
	move.l gap_ptr,a0
	cmp.b #10,(a0)
	 beq LSide508
LSide500:
	 jsr move_right
	move.w curs_ptr+2,d0
	sub.w file_ptr+2,d0
	add.w a2,d0
	cmp.w (a3),d0
	 blt LSide501
LSide496:
	clr.w d0
	 bra LSide481
	 EVEN
LSide508:
	addq.l #1,a2
	 bra LSide500
	 EVEN
LSide507:
	move.l end_ptr,a0
	move.b #10,(a0)
	addq.l #1,end_ptr
	addq.l #1,a1
	 bra LSide486
	 EVEN
LSide505:
	move.w #1,-(sp)
	 bra LSide504
	 EVEN
LSide483:
	move.l d3,-(sp)
	 jsr SymAdd
	move.l d0,(sp)
	 jsr DerefSym
	addq.l #4,sp
	cmp.w #0,a0
	 beq LSide493
	move.l d3,-(sp)
	 jsr SymDel
	pea (513).w
	 jsr HeapAllocPtr
	move.l a0,d0
	move.l a0,file_ptr
	addq.l #8,sp
	 beq LSide505
	move.l a0,curs_ptr
	move.l a0,page_ptr
	add.l #512,d0
	move.l d0,gap_ptr
	move.l d0,end_ptr
	 bra LSide492
	 EVEN
LSide481:
	 movem.l -32(a6),#$c08
	unlk a6
	rts
	 EVEN
save_file:
	link.w a6,#-20
	 movem.l #$1e30,-(sp)
	move.l a6,d5
	subq.l #1,d5
	sub.l a2,a2
	move.l curs_ptr,d0
	sub.l file_ptr,d0
	add.l end_ptr,d0
	sub.l gap_ptr,d0
	move.l d0,d3
	addq.l #7,d3
	moveq.l #1,d4
	tst.b modified
	 bne LSide544
LSide542:
	clr.w d0
	 bra LSide509
	 EVEN
LSide544:
	pea -20(a6)
	move.l filename,-(sp)
	 jsr TokenizeName
	addq.l #8,sp
	tst.w d0
	 bne LSide543
	clr.w -(sp)
	move.l d5,-(sp)
	 jsr SymFindPtr
	move.l a0,a3
	addq.l #6,sp
	cmp.w #0,a0
	 beq LSide545
LSide512:
	move.b 10(a3),d0
	lsr.l #1,d0
	and.w #1,d0
	move.b d0,d6
	 bne LSide546
LSide513:
	move.l file_ptr,a0
	move.l end_ptr,d1
	cmp.l a0,d1
	 bls LSide536
	move.l curs_ptr,d0
	move.l gap_ptr,d2
	 EVEN
LSide522:
	cmp.l a0,d0
	 beq LSide547
LSide519:
	cmp.b #10,(a0)
	 beq LSide548
LSide517:
	addq.l #1,a0
	cmp.l a0,d1
	 bhi LSide522
LSide536:
	move.l d3,-(sp)
	move.w 12(a3),-(sp)
	 jsr HeapRealloc
	addq.l #6,sp
	tst.w d0
	 bne LSide549
LSide523:
	tst.b d6
	 bne LSide550
LSide533:
	cmp.w #0,a2
	 beq LSide540
	clr.b modified
	 bra LSide542
	 EVEN
LSide540:
	move.w #1,-(sp)
	 EVEN
LSide541:
	 jsr error
	addq.l #2,sp
	 bra LSide509
	 EVEN
LSide550:
	move.w #13,-(sp)
	 jsr pushkey
	clr.l -(sp)
	move.l d5,-(sp)
	 jsr EM_moveSymToExtMem
	 jsr GKeyFlush
	lea 10(sp),sp
	 bra LSide533
	 EVEN
LSide549:
	move.w d0,12(a3)
	move.w d0,-(sp)
	 jsr HeapDeref
	move.l a0,a2
	subq.w #2,d3
	move.w d3,(a2)+
	move.w curs_ptr+2,d0
	sub.w file_ptr+2,d0
	add.w d4,d0
	move.w d0,(a2)+
	move.b #32,(a2)+
	move.l file_ptr,a0
	addq.l #2,sp
	move.l end_ptr,d1
	cmp.l a0,d1
	 bls LSide538
	 EVEN
LSide532:
	cmp.l curs_ptr,a0
	 beq LSide551
LSide528:
	move.b (a0),d0
	cmp.b #10,d0
	 beq LSide552
	cmp.b #-1,d0
	 beq LSide526
	move.b d0,(a2)+
LSide539:
	move.l end_ptr,d1
LSide526:
	addq.l #1,a0
	cmp.l a0,d1
	 bhi LSide532
LSide538:
	clr.b (a2)+
	move.b #-32,(a2)+
	 bra LSide523
	 EVEN
LSide552:
	move.b #13,(a2)+
	move.b #32,(a2)+
	 bra LSide539
	 EVEN
LSide551:
	move.l gap_ptr,a0
	 bra LSide528
	 EVEN
LSide548:
	addq.l #1,d3
	cmp.l a0,d0
	 bls LSide517
	addq.l #1,d4
	 bra LSide517
	 EVEN
LSide547:
	move.l d2,a0
	 bra LSide519
	 EVEN
LSide546:
	clr.l -(sp)
	move.l d5,-(sp)
	 jsr EM_moveSymFromExtMem
	addq.l #8,sp
	tst.w d0
	 bne LSide513
	 bra LSide540
	 EVEN
LSide545:
	move.l d5,-(sp)
	 jsr SymAdd
	move.l d0,(sp)
	 jsr DerefSym
	move.l a0,a3
	addq.l #4,sp
	cmp.w #0,a0
	 bne LSide512
	 EVEN
LSide543:
	move.w #2,-(sp)
	 bra LSide541
	 EVEN
LSide509:
	 movem.l -44(a6),#$c78
	unlk a6
	rts
LSideC39:
	 dc.b "[ARROWS]=Move  [ENTER]=Copy  [ESC]=Exit",0
	 EVEN
chars_table:
	 movem.l #$1f38,-(sp)
	sub.l a2,a2
	clr.w d6
	pea LSideC39
	 jsr show_msg
	move.w #50,-(sp)
	move.w #83,-(sp)
	 jsr window
	move.w penCol,a3
	move.w penRow,a4
	addq.l #8,sp
LSide554:
	move.w a4,penRow
	clr.w d5
	clr.w d7
LSide567:
	move.w a3,penCol
	clr.w d4
	move.w d7,d3
	add.w #32,d3
	 EVEN
LSide566:
	move.w #1,penColor
	cmp.w d5,d6
	 beq LSide585
LSide565:
	move.w d3,-(sp)
	 jsr draw_char46
	addq.w #1,penCol
	addq.l #2,sp
	addq.w #1,d3
	addq.w #1,d4
	cmp.w #15,d4
	 ble LSide566
	addq.w #8,penRow
	add.w #16,d7
	addq.w #1,d5
	cmp.w #5,d5
	 ble LSide567
	 jsr get_key
	move.w d0,d3
	cmp.w #338,d0
	 beq LSide571
	 bgt LSide578
	cmp.w #13,d0
	 beq LSide575
	cmp.w #337,d0
	 beq LSide570
LSide556:
	cmp.w #13,d3
	 beq LSide555
	cmp.w #264,d3
	 bne LSide554
	 bra LSide555
	 EVEN
LSide570:
	subq.w #1,a2
	move.w a2,d1
	and.w #15,d1
	move.w d1,a2
	 bra LSide556
	 EVEN
LSide575:
	move.w d6,d0
	lsl.w #4,d0
	add.w a2,d0
	add.w #32,d0
	move.w d0,-(sp)
	 jsr write
	addq.l #2,sp
	 bra LSide556
	 EVEN
LSide578:
	cmp.w #340,d0
	 beq LSide569
	cmp.w #344,d0
	 bne LSide556
	move.w d6,d0
	addq.w #1,d0
	moveq.l #6,d1
	ext.l d0
	divs.w d1,d0
	move.l d0,d6
	swap d6
	 bra LSide556
	 EVEN
LSide569:
	addq.w #1,a2
	move.w a2,d0
	and.w #15,d0
	move.w d0,a2
	 bra LSide556
	 EVEN
LSide571:
	subq.w #1,d6
	move.w d6,d0
	 blt LSide586
LSide573:
	move.w d0,d6
	 bra LSide556
	 EVEN
LSide586:
	moveq.l #5,d0
	 bra LSide573
	 EVEN
LSide585:
	cmp.w a2,d4
	 bne LSide565
	move.w #129,penColor
	 bra LSide565
	 EVEN
LSide555:
	 jsr draw_menu_bar
	 movem.l (sp)+,#$1cf8
	rts
	 EVEN
compile:
	lea -68(sp),sp
	 movem.l #$1030,-(sp)
	 jsr save_file
	tst.w d0
	 bne LSide587
	lea 12(sp),a3
	move.l a3,a2
	move.l 84(sp),a1
	move.b (a1),d0
	 beq LSide602
	 EVEN
LSide600:
	cmp.b #33,d0
	 beq LSide604
	move.b (a1),(a2)+
LSide591:
	addq.l #1,a1
	move.b (a1),d0
	 bne LSide600
LSide602:
	clr.b (a2)
	move.l a3,-(sp)
	 jsr push_parse_text
	 jsr HS_popEStack
	move.w d0,d3
	clr.w -(sp)
	move.w d0,-(sp)
	 jsr NG_execute
	move.w d3,-(sp)
	 jsr HeapFree
	 jsr PortRestore
	move.b #1,refresh
	 jsr draw_menu_bar
	lea 10(sp),sp
	 bra LSide587
	 EVEN
LSide604:
	move.l filename,a0
	tst.b (a0)
	 beq LSide591
	 EVEN
LSide598:
	move.b (a0)+,(a2)+
	tst.b (a0)
	 bne LSide598
	 bra LSide591
	 EVEN
LSide587:
	 movem.l (sp)+,#$c08
	lea 68(sp),sp
	rts
LSideC40:
	 dc.b "[UP]/[DOWN]=Scroll  [ESC]or[APPS]=Exit",0
	 EVEN
show_text2:
	link.w a6,#-20
	 movem.l #$1c20,-(sp)
	clr.w -(sp)
	pea -20(a6)
	pea text2_name
	 jsr StrToTokN
	addq.w #4,sp
	move.l a0,(sp)
	 jsr SymFindPtr
	move.l a0,a2
	addq.l #6,sp
	cmp.w #0,a0
	 beq LSide605
	pea LSideC40
	 jsr show_msg
	move.w 12(a2),-(sp)
	 jsr HeapDeref
	move.l a0,a2
	addq.l #6,sp
	moveq.l #0,d5
	 EVEN
LSide607:
	move.w text2_pos,d5
	pea 0(a2,d5.l)
	move.w #60,-(sp)
	move.w #16,-(sp)
	 jsr draw_text_screen
	 jsr get_key
	move.w d0,d2
	addq.l #8,sp
	cmp.w #344,d0
	 beq LSide624
LSide610:
	cmp.w #338,d2
	 beq LSide625
LSide609:
	add.w #-264,d2
	cmp.w #1,d2
	 bhi LSide607
	move.b #1,refresh
	 jsr draw_menu_bar
	 bra LSide605
	 EVEN
LSide625:
	moveq.l #60,d2
	moveq.l #0,d0
LSide618:
	subq.w #1,d2
	cmp.w #-1,d2
	 beq LSide609
	move.w text2_pos,d1
	cmp.w #5,d1
	 bls LSide609
	move.w d1,a0
	subq.w #1,a0
	move.w a0,text2_pos
	subq.w #3,d1
	move.w d1,d0
	cmp.b #13,0(a2,d0.l)
	 bne LSide618
	 bra LSide609
	 EVEN
LSide624:
	moveq.l #60,d2
	moveq.l #0,d4
	moveq.l #0,d3
LSide611:
	subq.w #1,d2
	cmp.w #-1,d2
	 beq LSide623
	move.w text2_pos,d0
	move.w d0,d1
	move.w d0,d4
	tst.b 0(a2,d4.l)
	 beq LSide612
	addq.w #1,d0
	move.w d0,text2_pos
	subq.w #1,d1
	move.w d1,d3
	cmp.b #13,0(a2,d3.l)
	 bne LSide611
LSide612:
	and.l #$FFFF,d0
	tst.b 0(a2,d0.l)
	 bne LSide615
	move.w #338,d2
	 bra LSide610
	 EVEN
LSide615:
	clr.w d2
	 bra LSide610
	 EVEN
LSide623:
	move.w text2_pos,d0
	 bra LSide612
	 EVEN
LSide605:
	 movem.l -36(a6),#$438
	unlk a6
	rts
	 EVEN
write_cr:
	move.l a2,-(sp)
	move.l d3,-(sp)
	clr.w d3
	move.l curs_ptr,a2
	move.w #10,-(sp)
	 jsr write
	addq.l #2,sp
	tst.b auto_indent
	 beq LSide626
	move.l file_ptr,d1
	cmp.l a2,d1
	 beq LSide629
	move.b -(a2),d0
	cmp.b #10,d0
	 beq LSide629
	 EVEN
LSide634:
	addq.w #1,d3
	cmp.b #32,d0
	 beq LSide628
	clr.w d3
LSide628:
	cmp.l a2,d1
	 beq LSide629
	move.b -(a2),d0
	cmp.b #10,d0
	 bne LSide634
LSide629:
	subq.w #1,d3
	cmp.w #-1,d3
	 beq LSide626
	 EVEN
LSide638:
	move.w #32,-(sp)
	 jsr write
	addq.l #2,sp
	dbra d3,LSide638
LSide626:
	move.l (sp)+,d3
	move.l (sp)+,a2
	rts
LSideC41:
	 dc.b "Filename: ",0
LSideC42:
	 dc.b "Loading ...",0
LSideC43:
	 dc.b "%4d",0
LSideC44:
	 dc.b "Save changes?",0
	 EVEN
	 xdef	run_side
run_side:
	lea -32(sp),sp
	 movem.l #$1030,-(sp)
	move.l filename,d0
	 bne LSide710
	clr.b 12(sp)
	lea 12(sp),a3
LSide643:
	move.l a3,filename
	lea draw_title_bar,a2
	 EVEN
LSide644:
	 jsr ScreenClear
	 jsr (a2)
	tst.b 12(sp)
	 bne LSide647
	pea LSideC41
	 jsr show_msg
	move.w #1,-(sp)
	move.w #17,-(sp)
	move.l a3,-(sp)
	 jsr input_str
	lea 12(sp),sp
	tst.b d0
	 beq LSide641
	 jsr (a2)
LSide647:
	pea LSideC42
	 jsr show_msg
	 jsr open_file
	addq.l #4,sp
	tst.w d0
	 bne LSide641
	 jsr draw_menu_bar
	move.b #1,refresh
	 EVEN
LSide650:
	clr.w penRow
	move.w #216,penCol
	move.w #1,penColor
	move.w line,-(sp)
	pea LSideC43
	 jsr print_str
	addq.l #6,sp
	tst.b refresh
	 bne LSide711
LSide653:
	clr.b refresh
	move.b #1,cursor_on
	 jsr get_key
	move.w d0,d3
	clr.b cursor_on
	add.w #-32,d0
	cmp.w #95,d0
	 bls LSide712
	cmp.w #4139,d3
	 beq LSide681
	 bgt LSide692
	cmp.w #271,d3
	 beq LSide686
	 bgt LSide693
	cmp.w #265,d3
	 beq LSide682
	 bgt LSide694
	cmp.w #257,d3
	 beq LSide677
	 bgt LSide695
	cmp.w #13,d3
	 beq LSide679
	 EVEN
LSide652:
	cmp.w #264,d3
	 beq LSide651
	cmp.w #4360,d3
	 bne LSide650
LSide651:
	tst.b modified
	 bne LSide713
LSide707:
	move.l file_ptr,-(sp)
	 jsr HeapFreePtr
	clr.b 16(sp)
	addq.l #4,sp
	cmp.w #4360,d3
	 bne LSide644
	 bra LSide641
	 EVEN
LSide713:
	pea LSideC44
	 jsr prompt
	addq.l #4,sp
	tst.b d0
	 beq LSide707
	move.w #3360,-(sp)
	pea (19696).w
	 jsr bzero
	addq.l #6,sp
	 jsr save_file
	 bra LSide707
	 EVEN
LSide679:
	 jsr write_cr
	 bra LSide652
	 EVEN
LSide695:
	cmp.w #263,d3
	 bne LSide652
	 jsr clear_line
	 bra LSide652
	 EVEN
LSide677:
	 jsr back
	 bra LSide652
	 EVEN
LSide694:
	cmp.w #269,d3
	 beq LSide684
	 bgt LSide685
	cmp.w #268,d3
	 bne LSide652
	pea exec_name
LSide709:
	 jsr compile
	addq.l #4,sp
	 bra LSide652
	 EVEN
LSide685:
	 jsr go_line
	 bra LSide652
	 EVEN
LSide684:
	pea exec_name2
	 bra LSide709
	 EVEN
LSide682:
	 jsr show_text2
	 bra LSide652
	 EVEN
LSide693:
	cmp.w #337,d3
	 beq LSide661
	 bgt LSide696
	cmp.w #273,d3
	 beq LSide688
	 blt LSide687
	cmp.w #274,d3
	 bne LSide652
	 jsr about
	 bra LSide652
	 EVEN
LSide687:
	 jsr replace
	 bra LSide652
	 EVEN
LSide688:
	 jsr config
	 bra LSide652
	 EVEN
LSide696:
	cmp.w #340,d3
	 beq LSide662
	 bgt LSide697
	cmp.w #338,d3
	 bne LSide652
	 jsr move_up
	 bra LSide652
	 EVEN
LSide697:
	cmp.w #344,d3
	 bne LSide652
	 jsr move_down
	 bra LSide652
	 EVEN
LSide662:
	 jsr move_right
	 bra LSide652
	 EVEN
LSide661:
	 jsr move_left
	 bra LSide652
	 EVEN
LSide686:
	 jsr find
	 bra LSide652
	 EVEN
LSide692:
	cmp.w #8449,d3
	 beq LSide678
	 bgt LSide698
	cmp.w #4440,d3
	 beq LSide668
	 bgt LSide699
	cmp.w #4434,d3
	 beq LSide667
	 bgt LSide700
	cmp.w #4433,d3
	 bne LSide652
	 jsr line_start
	 bra LSide652
	 EVEN
LSide700:
	cmp.w #4436,d3
	 bne LSide652
	 jsr line_end
	 bra LSide652
	 EVEN
LSide667:
	 jsr page_up
	 bra LSide652
	 EVEN
LSide699:
	cmp.w #8310,d3
	 beq LSide658
	 bgt LSide701
	cmp.w #8291,d3
	 bne LSide652
	 jsr clipboard_copy
	 bra LSide652
	 EVEN
LSide701:
	cmp.w #8312,d3
	 bne LSide652
	 jsr clipboard_copy
	tst.w d0
	 bne LSide652
	 jsr clear_selection
	 bra LSide652
	 EVEN
LSide658:
	 jsr clipboard_paste
	 bra LSide652
	 EVEN
LSide668:
	 jsr page_down
	 bra LSide652
	 EVEN
LSide698:
	cmp.w #8536,d3
	 beq LSide674
	 bgt LSide702
	cmp.w #8530,d3
	 beq LSide673
	 bgt LSide703
	cmp.w #8529,d3
	 bne LSide652
	 jsr move_left_word
	 bra LSide652
	 EVEN
LSide703:
	cmp.w #8532,d3
	 bne LSide652
	 jsr move_right_word
	 bra LSide652
	 EVEN
LSide673:
	 jsr page_top
	 bra LSide652
	 EVEN
LSide702:
	cmp.w #16722,d3
	 beq LSide671
	 bgt LSide704
	cmp.w #16721,d3
	 bne LSide652
	 jsr select_left
	 bra LSide652
	 EVEN
LSide704:
	cmp.w #16724,d3
	 beq LSide670
	cmp.w #16728,d3
	 bne LSide652
	 jsr select_down
	 bra LSide652
	 EVEN
LSide670:
	 jsr select_right
	 bra LSide652
	 EVEN
LSide671:
	 jsr select_up
	 bra LSide652
	 EVEN
LSide674:
	 jsr page_end
	 bra LSide652
	 EVEN
LSide678:
	 jsr del
	 bra LSide652
	 EVEN
LSide681:
	 jsr chars_table
	 bra LSide652
	 EVEN
LSide712:
	move.w d3,-(sp)
	 jsr write
	addq.l #2,sp
	 bra LSide652
	 EVEN
LSide711:
	move.l page_ptr,-(sp)
	move.w #60,-(sp)
	move.w #16,-(sp)
	 jsr draw_text_screen
	addq.l #8,sp
	 bra LSide653
	 EVEN
LSide710:
	move.l d0,-(sp)
	lea 16(sp),a3
	move.l a3,-(sp)
	 jsr strcpy
	addq.l #8,sp
	 bra LSide643
	 EVEN
LSide641:
	 movem.l (sp)+,#$c08
	lea 32(sp),sp
	rts
